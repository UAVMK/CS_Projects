<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ElevatorControlSystem"
        xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2" xmlns:MyControl="clr-namespace:ElevatorControlSystem.MyControl" x:Class="ElevatorControlSystem.MainWindow"
        mc:Ignorable="d"
        Title=" " Width="1920" Height="1080"  WindowStyle="None"  WindowStartupLocation="CenterScreen" AllowsTransparency="True" Icon="Images/MainIcon.png" >

    <Window.Resources>

        <Style x:Key="CheckBoxStyleIsProd" TargetType="{x:Type CheckBox}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="OnChecking">
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="slider" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="60"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="slider" Storyboard.TargetProperty="Width">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="35"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="slider" Storyboard.TargetProperty="Height">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="35"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnUnchecking">
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="slider" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="slider" Storyboard.TargetProperty="Width">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="28"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="slider" Storyboard.TargetProperty="Height">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="28"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="BlinkAnimation" RepeatBehavior="Forever">
                                <DoubleAnimation Storyboard.TargetName="slider" Storyboard.TargetProperty="Width" From="28" To="35" AutoReverse="True" Duration="0:0:0.5"/>
                                <DoubleAnimation Storyboard.TargetName="slider" Storyboard.TargetProperty="Height" From="28" To="35" AutoReverse="True" Duration="0:0:0.5"/>
                            </Storyboard>
                        </ControlTemplate.Resources>

                        <DockPanel x:Name="dockPanel" Margin="-52,0,1,-7">
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}" RecognizesAccessKey="True" VerticalAlignment="Center"/>
                            <Grid Margin="5,5,0,5" Width="90" Background="White">
                                <TextBlock Text="Нет" TextWrapping="Wrap" FontWeight="Bold" FontSize="15" HorizontalAlignment="Right" Margin="0,0,3,0" Foreground="Black"/>
                                <TextBlock HorizontalAlignment="Left" Margin="2,0,0,0" FontSize="15" FontWeight="Bold" Text="Да" TextWrapping="Wrap" Foreground="Black"/>
                                <Border HorizontalAlignment="Left" x:Name="slider" Width="28" Height="20"  BorderThickness="1,1,1,1" CornerRadius="3,3,3,3" RenderTransformOrigin="0.5,0.5" Margin="1,-10,0,7">
                                    <Border.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform ScaleX="1" ScaleY="1"/>
                                            <SkewTransform AngleX="0" AngleY="0"/>
                                            <RotateTransform Angle="0"/>
                                            <TranslateTransform X="0" Y="0"/>
                                        </TransformGroup>
                                    </Border.RenderTransform>
                                    <Border.Triggers>
                                        <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                                            <BeginStoryboard Storyboard="{StaticResource BlinkAnimation}"/>
                                        </EventTrigger>
                                    </Border.Triggers>
                                    <Border.BorderBrush>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="Gray" Offset="0"/>
                                            <GradientStop Color="Gray" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Border.BorderBrush>
                                    <Border.Background>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="Gray" Offset="1"/>
                                            <GradientStop Color="Gray" Offset="0"/>
                                        </LinearGradientBrush>
                                    </Border.Background>
                                </Border>
                            </Grid>
                        </DockPanel>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource OnChecking}" x:Name="OnChecking_BeginStoryboard"/>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard Storyboard="{StaticResource OnUnchecking}" x:Name="OnUnchecking_BeginStoryboard"/>
                                </Trigger.ExitActions>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="CheckBoxStyleEditMode" TargetType="{x:Type CheckBox}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="OnChecking">
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="slider" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="50"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnUnchecking">
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="slider" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>

                            </Storyboard>
                        </ControlTemplate.Resources>

                        <DockPanel x:Name="dockPanel" Height="50" Margin="0,0,79,0">
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}" RecognizesAccessKey="True" VerticalAlignment="Center"/>
                            <Grid Margin="5,5,0,5" Width="98" Background="Black" Height="34">
                                <TextBlock Text="OFF" Foreground="White" TextWrapping="Wrap" FontWeight="Bold" FontSize="13" HorizontalAlignment="Left"  Width="28" Margin="60,1,0,16"/>
                                <TextBlock HorizontalAlignment="Left"  Foreground="White" Text="ON" TextWrapping="Wrap" FontWeight="Bold" FontSize="13"  Width="38" Margin="0,0,0,16"/>
                                <Border HorizontalAlignment="Left" x:Name="slider" Width="44" BorderThickness="1,1,1,1" CornerRadius="3,3,3,3" RenderTransformOrigin="0.5,0.5" Margin="-6,0,0,16">
                                    <Border.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform ScaleX="1" ScaleY="1"/>
                                            <SkewTransform AngleX="0" AngleY="0"/>
                                            <RotateTransform Angle="0"/>
                                            <TranslateTransform X="0" Y="0"/>
                                        </TransformGroup>
                                    </Border.RenderTransform>
                                    <Border.BorderBrush>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="Gray" Offset="0"/>
                                            <GradientStop Color="Gray" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Border.BorderBrush>
                                    <Border.Background>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="Gray" Offset="1"/>
                                            <GradientStop Color="Gray" Offset="0"/>
                                        </LinearGradientBrush>

                                    </Border.Background>
                                </Border>
                            </Grid>
                        </DockPanel>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Trigger.ExitActions>
                                    <BeginStoryboard Storyboard="{StaticResource OnUnchecking}" x:Name="OnUnchecking_BeginStoryboard"/>
                                </Trigger.ExitActions>
                                <Trigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource OnChecking}" x:Name="OnChecking_BeginStoryboard"/>
                                </Trigger.EnterActions>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Storyboard x:Key="ToggleStoryboard">
            <DoubleAnimation Storyboard.TargetProperty="Height" Duration="0:0:0.5" />
        </Storyboard>

        <Style x:Key="NoHighlightButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="RoundedTextBoxStyle" TargetType="{x:Type TextBox}">
            <Border x:Name="border" CornerRadius="5"
                 BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
            </Border>
        </ControlTemplate>

        <Style x:Key="RoundedButtonStyle2" TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <ControlTemplate.Resources>
                            <SolidColorBrush x:Key="BlackBrush" Color="White"/>
                        </ControlTemplate.Resources>
                        <Border x:Name="border" CornerRadius="10" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="White"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="White"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource BlackBrush}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="White"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="White"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="White"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#FFDDDDDD"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="StackPanelHoverEffectStyle" TargetType="{x:Type StackPanel}">
            <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
            <Setter Property="RenderTransform">
                <Setter.Value>
                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="RenderTransform">
                        <Setter.Value>
                            <ScaleTransform ScaleX="1.1" ScaleY="1.1"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" SnapsToDevicePixels="true" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <SolidColorBrush x:Key="TextBox.Static.Background" Color="#FFFFFFFF"/>
        <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="MinWidth" Value="0"/>
            <Setter Property="MinHeight" Value="0"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <LinearGradientBrush x:Key="ComboBox.Static.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFF0F0F0" Offset="0.0"/>
            <GradientStop Color="#FFE5E5E5" Offset="1.0"/>
        </LinearGradientBrush>

        <SolidColorBrush x:Key="ComboBox.Static.Border" Color="#FFACACAC"/>
        <SolidColorBrush x:Key="ComboBox.Static.Glyph" Color="#FF606060"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Border" Color="#FFABADB3"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Border" Color="Transparent"/>

        <LinearGradientBrush x:Key="ComboBox.MouseOver.Background" EndPoint="0,1" StartPoint="0,0">
            <!--wwww-->
            <GradientStop Color="White" Offset="0.0" />
            <GradientStop Color="White" Offset="1.0" />
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Glyph" Color="Black"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Border" Color="#FF7EB4EA"/>
        <LinearGradientBrush x:Key="ComboBox.MouseOver.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFEBF4FC" Offset="0.0"/>
            <GradientStop Color="#FFDCECFC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Border" Color="#FF7EB4EA"/>
        <LinearGradientBrush x:Key="ComboBox.Pressed.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFDAECFC" Offset="0.0"/>
            <GradientStop Color="#FFC4E0FC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Pressed.Border" Color="#FF569DE5"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Glyph" Color="#FF000000"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Border" Color="#FF569DE5"/>
        <LinearGradientBrush x:Key="ComboBox.Pressed.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFDAEBFC" Offset="0.0"/>
            <GradientStop Color="#FFC4E0FC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Border" Color="#FF569DE5"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Background" Color="#FFF0F0F0"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Border" Color="#FFD9D9D9"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Glyph" Color="#FFBFBFBF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Border" Color="#FFBFBFBF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Border" Color="Transparent"/>
        <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="ClickMode" Value="Press"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="templateRoot" CornerRadius="10" Background="{StaticResource ComboBox.Static.Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource ComboBox.Static.Border}" SnapsToDevicePixels="true">
                            <Border x:Name="splitBorder" BorderThickness="1" BorderBrush="Transparent" HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="true" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                <Path x:Name="arrow" Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z" Fill="{StaticResource ComboBox.Static.Glyph}" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center"/>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Mode=Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.MouseOver.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Pressed.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Mode=Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Mode=Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Disabled.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource Mode=TemplatedParent}}" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                    <theme:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MinWidth="{Binding ActualWidth, ElementName=templateRoot}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                        <Border x:Name="dropDownBorder" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" BorderThickness="1" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}">
                            <ScrollViewer x:Name="DropDownScrollViewer">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </theme:SystemDropShadowChrome>
                </Popup>
                <ToggleButton x:Name="toggleButton" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
                <Border x:Name="border" Background="{StaticResource TextBox.Static.Background}" Margin="{TemplateBinding BorderThickness}">
                    <TextBox x:Name="PART_EditableTextBox" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource Mode=TemplatedParent}}" Margin="{TemplateBinding Padding}" Style="{StaticResource ComboBoxEditableTextBox}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                </Border>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocusWithin" Value="true">
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>
                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                    <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                </Trigger>
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                        <Condition Property="Selector.IsSelected"
                    Value="False" />
                        <Condition Property="IsMouseOver"
                    Value="True" />
                        <Condition Property="IsKeyboardFocused"
                    Value="True" />
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                    <Setter Property="Background"
            TargetName="border"
            Value="Black" />
                    <Setter Property="BorderBrush"
            TargetName="border"
            Value="Black" />
                </MultiTrigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" Margin="1" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                    <theme:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MinWidth="{Binding ActualWidth, ElementName=templateRoot}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                        <Border x:Name="dropDownBorder" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" BorderThickness="1" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}">
                            <ScrollViewer x:Name="DropDownScrollViewer">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </theme:SystemDropShadowChrome>
                </Popup>
                <ToggleButton x:Name="toggleButton" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                    <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                </Trigger>
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                        <Condition Property="Selector.IsSelected"
                    Value="False" />
                        <Condition Property="IsMouseOver"
                    Value="True" />
                        <Condition Property="IsKeyboardFocused"
                    Value="True" />
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                        <Condition Property="Selector.IsSelected" Value="False" />
                        <Condition Property="IsMouseOver" Value="True" />
                        <Condition Property="IsKeyboardFocused" Value="True" />

                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>

                </MultiTrigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="ComboBoxStyle1" TargetType="{x:Type ComboBox}">
            <Setter Property="Background" Value="#FF000000" />
            <Setter Property="BorderBrush" Value="#FF000000" />
            <Setter Property="Foreground" Value="#FFFFFFFF" />

            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="Padding" Value="6,3,5,3" />
            <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
            <Setter Property="ScrollViewer.PanningMode" Value="Both" />
            <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
            <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}" />
            <Style.Triggers>
                <Trigger Property="IsEditable" Value="true">
                    <Setter Property="IsTabStop" Value="false" />
                    <Setter Property="Padding" Value="2" />
                    <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}" />
                </Trigger>
            </Style.Triggers>
        </Style>


        <Style x:Key="CalendarStyle1" TargetType="{x:Type Calendar}">
            <Setter Property="MaxHeight" Value="400"/>
            <Setter Property="Foreground" Value="#FF333333"/>
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FFE4EAF0" Offset="0"/>
                        <GradientStop Color="#FFECF0F4" Offset="0.16"/>
                        <GradientStop Color="#FFFCFCFD" Offset="0.16"/>
                        <GradientStop Color="#FFFFFFFF" Offset="1"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderBrush">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FFA3AEB9" Offset="0"/>
                        <GradientStop Color="#FF8399A9" Offset="0.375"/>
                        <GradientStop Color="#FF718597" Offset="0.375"/>
                        <GradientStop Color="#FF617584" Offset="1"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Calendar}">
                        <StackPanel x:Name="PART_Root" HorizontalAlignment="Center">
                            <CalendarItem x:Name="PART_CalendarItem" BorderThickness="{TemplateBinding BorderThickness}" Style="{TemplateBinding CalendarItemStyle}" Height="300" Width="346.356" Background="Black" BorderBrush="{x:Null}" Foreground="#FFFDFDFD"/>
                        </StackPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style x:Key="CalendarButtonStyle1" TargetType="{x:Type CalendarButton}">
            <Setter Property="Background" Value="#FFBADDE9"/>
            <Setter Property="MinWidth" Value="40"/>
            <Setter Property="MinHeight" Value="42"/>
            <Setter Property="FontSize" Value="10"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CalendarButton}">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0:0:0.1"/>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To=".5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Background"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To=".5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Background"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0"/>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Unselected"/>
                                    <VisualState x:Name="Selected">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To=".75" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBackground"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ActiveStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0"/>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Active"/>
                                    <VisualState x:Name="Inactive">
                                        <Storyboard>
                                            <ColorAnimation Duration="0" To="#FF777777" Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="NormalText"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CalendarButtonFocusStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0"/>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="CalendarButtonFocused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="CalendarButtonFocusVisual">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="CalendarButtonUnfocused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="CalendarButtonFocusVisual">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Collapsed</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Rectangle x:Name="SelectedBackground" Fill="{TemplateBinding Background}" Opacity="0" RadiusY="1" RadiusX="1"/>
                            <Rectangle x:Name="Background" Fill="{TemplateBinding Background}" Opacity="0" RadiusY="1" RadiusX="1"/>
                            <ContentPresenter x:Name="NormalText" TextElement.Foreground="#FF333333" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1,0,1,1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <Rectangle x:Name="CalendarButtonFocusVisual" IsHitTestVisible="false" RadiusY="1" RadiusX="1" Stroke="#FF45D6FA" Visibility="Collapsed"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="Visibility" TargetName="CalendarButtonFocusVisual" Value="Visible"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="CalendarDayButtonStyle1" TargetType="{x:Type CalendarDayButton}">
            <Setter Property="MinWidth" Value="5"/>
            <Setter Property="MinHeight" Value="5"/>
            <Setter Property="FontSize" Value="10"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CalendarDayButton}">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0:0:0.1"/>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HighlightBackground"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HighlightBackground"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HighlightBackground"/>
                                            <DoubleAnimation Duration="0" To=".35" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="NormalText"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0"/>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Unselected"/>
                                    <VisualState x:Name="Selected">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To=".75" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBackground"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CalendarButtonFocusStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0"/>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="CalendarButtonFocused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="DayButtonFocusVisual">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="CalendarButtonUnfocused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="DayButtonFocusVisual">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Collapsed</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ActiveStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0"/>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Active"/>
                                    <VisualState x:Name="Inactive">
                                        <Storyboard>
                                            <ColorAnimation Duration="0" To="#FF777777" Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="NormalText"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="DayStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0"/>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="RegularDay"/>
                                    <VisualState x:Name="Today">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="TodayBackground"/>
                                            <ColorAnimation Duration="0" To="#FFFFFFFF" Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="NormalText"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="BlackoutDayStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0"/>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="NormalDay"/>
                                    <VisualState x:Name="BlackoutDay">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To=".2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Blackout"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Rectangle x:Name="TodayBackground" Fill="#FFF75A5A" Opacity="0" RadiusY="15" RadiusX="15" Width="47" Height="30"/>
                            <Rectangle x:Name="SelectedBackground" Fill="#FF3BF3B9" Opacity="0" RadiusY="15" RadiusX="15"/>
                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"/>
                            <Rectangle x:Name="HighlightBackground" Fill="#FF3BF3B9" Opacity="0" RadiusY="15" RadiusX="15"/>
                            <ContentPresenter x:Name="NormalText" TextElement.Foreground="#FFF" TextElement.FontSize="12" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="5,1,5,1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <Path x:Name="Blackout" Data="M8.1772461,11.029181 L10.433105,11.029181 L11.700684,12.801641 L12.973633,11.029181 L15.191895,11.029181 L12.844727,13.999395 L15.21875,17.060919 L12.962891,17.060919 L11.673828,15.256231 L10.352539,17.060919 L8.1396484,17.060919 L10.519043,14.042364 z" Fill="#FF000000" HorizontalAlignment="Stretch" Margin="3" Opacity="0" RenderTransformOrigin="0.5,0.5" Stretch="Fill" VerticalAlignment="Stretch"/>
                            <Rectangle x:Name="DayButtonFocusVisual" IsHitTestVisible="false" RadiusY="15" RadiusX="15" Stroke="#FF3BF3B9" Visibility="Collapsed"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="CalendarItemStyle1" TargetType="{x:Type CalendarItem}">
            <Setter Property="MinWidth" Value="100"/>
            <Setter Property="MinHeight" Value="100"/>
            <Setter Property="Margin" Value="0,3,0,3"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CalendarItem}">
                        <ControlTemplate.Resources>
                            <DataTemplate x:Key="{x:Static CalendarItem.DayTitleTemplateResourceKey}">
                                <TextBlock Foreground="#FFF7F787" FontWeight="Bold" FontSize="9.5" FontFamily="Verdana" HorizontalAlignment="Center" Margin="0,6,0,6" Text="{Binding}" VerticalAlignment="Center"/>
                            </DataTemplate>
                        </ControlTemplate.Resources>
                        <Grid x:Name="PART_Root">
                            <Grid.Resources>
                                <SolidColorBrush x:Key="DisabledColor" Color="#A5FFFFFF"/>
                            </Grid.Resources>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_DisabledVisual"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="10">
                                <Border BorderBrush="{x:Null}" BorderThickness="2" CornerRadius="1">
                                    <Grid>
                                        <Grid.Resources>
                                            <ControlTemplate x:Key="PreviousButtonTemplate" TargetType="{x:Type Button}">
                                                <Grid Cursor="Hand">
                                                    <VisualStateManager.VisualStateGroups>
                                                        <VisualStateGroup x:Name="CommonStates">
                                                            <VisualState x:Name="Normal"/>
                                                            <VisualState x:Name="MouseOver">
                                                                <Storyboard>
                                                                    <ColorAnimation Duration="0" To="#FF73A9D8" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path"/>
                                                                </Storyboard>
                                                            </VisualState>
                                                            <VisualState x:Name="Disabled">
                                                                <Storyboard>
                                                                    <DoubleAnimation Duration="0" To=".5" Storyboard.TargetProperty="(Shape.Fill).(Brush.Opacity)" Storyboard.TargetName="path"/>
                                                                </Storyboard>
                                                            </VisualState>
                                                        </VisualStateGroup>
                                                    </VisualStateManager.VisualStateGroups>
                                                    <Rectangle Fill="#11E5EBF1" RadiusX="15" RadiusY="15" Opacity="1" Stretch="Fill"/>
                                                    <Grid>
                                                        <Path x:Name="path" Data="M288.75,232.25 L288.75,240.625 L283,236.625 z" Fill="#FFF" HorizontalAlignment="Left" Height="10" Margin="11,0,0,0" Stretch="Fill" VerticalAlignment="Center" Width="6"/>
                                                    </Grid>
                                                </Grid>
                                            </ControlTemplate>
                                            <ControlTemplate x:Key="NextButtonTemplate" TargetType="{x:Type Button}">
                                                <Grid Cursor="Hand">
                                                    <VisualStateManager.VisualStateGroups>
                                                        <VisualStateGroup x:Name="CommonStates">
                                                            <VisualState x:Name="Normal"/>
                                                            <VisualState x:Name="MouseOver">
                                                                <Storyboard>
                                                                    <ColorAnimation Duration="0" To="#FF73A9D8" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path"/>
                                                                </Storyboard>
                                                            </VisualState>
                                                            <VisualState x:Name="Disabled">
                                                                <Storyboard>
                                                                    <DoubleAnimation Duration="0" To=".5" Storyboard.TargetProperty="(Shape.Fill).(Brush.Opacity)" Storyboard.TargetName="path"/>
                                                                </Storyboard>
                                                            </VisualState>
                                                        </VisualStateGroup>
                                                    </VisualStateManager.VisualStateGroups>
                                                    <Rectangle Fill="#11E5EBF1" RadiusX="15" RadiusY="15" Opacity="1" Stretch="Fill"/>
                                                    <Grid>
                                                        <Path x:Name="path" Data="M282.875,231.875 L282.875,240.375 L288.625,236 z" Fill="#FFF" HorizontalAlignment="Right" Height="10" Margin="0,0,11,0" Stretch="Fill" VerticalAlignment="Center" Width="6"/>
                                                    </Grid>
                                                </Grid>
                                            </ControlTemplate>
                                            <ControlTemplate x:Key="HeaderButtonTemplate" TargetType="{x:Type Button}">
                                                <Grid Cursor="Hand">
                                                    <VisualStateManager.VisualStateGroups>
                                                        <VisualStateGroup x:Name="CommonStates">
                                                            <VisualState x:Name="Normal"/>
                                                            <VisualState x:Name="MouseOver">
                                                                <Storyboard>
                                                                    <ColorAnimation Duration="0" To="#FF73A9D8" Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="buttonContent"/>
                                                                </Storyboard>
                                                            </VisualState>
                                                            <VisualState x:Name="Disabled">
                                                                <Storyboard>
                                                                    <DoubleAnimation Duration="0" To=".5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="buttonContent"/>
                                                                </Storyboard>
                                                            </VisualState>
                                                        </VisualStateGroup>
                                                    </VisualStateManager.VisualStateGroups>
                                                    <ContentPresenter x:Name="buttonContent" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" TextElement.Foreground="#FFF" TextElement.FontSize="14"  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1,4,1,9" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                </Grid>
                                            </ControlTemplate>
                                        </Grid.Resources>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="*"/>
                                        </Grid.RowDefinitions>
                                        <Button x:Name="PART_PreviousButton" Grid.Column="0" Focusable="False" HorizontalAlignment="Left" Height="30" Grid.Row="0" Template="{StaticResource PreviousButtonTemplate}" Width="30" Margin="10,3.483,0,3.483"/>
                                        <Button x:Name="PART_HeaderButton" Grid.Column="1" FontWeight="Bold" Focusable="False" FontSize="10.5" HorizontalAlignment="Center" Grid.Row="0" Template="{StaticResource HeaderButtonTemplate}" VerticalAlignment="Center" Width="140"/>
                                        <Button x:Name="PART_NextButton" Grid.Column="2" Focusable="False" HorizontalAlignment="Right" Height="30" Grid.Row="0" Template="{StaticResource NextButtonTemplate}" Width="30" Margin="0,0,10,0"/>
                                        <Grid x:Name="PART_MonthView" Grid.ColumnSpan="3" HorizontalAlignment="Center" Margin="6,-1,6,6" Grid.Row="1" Visibility="Visible">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="40"/>
                                                <RowDefinition Height="35"/>
                                                <RowDefinition Height="35"/>
                                                <RowDefinition Height="35"/>
                                                <RowDefinition Height="35"/>
                                                <RowDefinition Height="35"/>
                                                <RowDefinition Height="35"/>
                                            </Grid.RowDefinitions>
                                        </Grid>
                                        <Grid x:Name="PART_YearView" Grid.ColumnSpan="3" HorizontalAlignment="Center" Margin="6,-3,7,6" Grid.Row="1" Visibility="Hidden">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                        </Grid>
                                    </Grid>
                                </Border>
                            </Border>
                            <Rectangle x:Name="PART_DisabledVisual" Fill="{StaticResource DisabledColor}" Opacity="0" RadiusY="2" RadiusX="2" Stretch="Fill" Stroke="{StaticResource DisabledColor}" StrokeThickness="1" Visibility="Collapsed"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Visibility" TargetName="PART_DisabledVisual" Value="Visible"/>
                            </Trigger>
                            <DataTrigger Binding="{Binding DisplayMode, RelativeSource={RelativeSource AncestorType={x:Type Calendar}, Mode=FindAncestor}}" Value="Year">
                                <Setter Property="Visibility" TargetName="PART_MonthView" Value="Hidden"/>
                                <Setter Property="Visibility" TargetName="PART_YearView" Value="Visible"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding DisplayMode, RelativeSource={RelativeSource AncestorType={x:Type Calendar}, Mode=FindAncestor}}" Value="Decade">
                                <Setter Property="Visibility" TargetName="PART_MonthView" Value="Hidden"/>
                                <Setter Property="Visibility" TargetName="PART_YearView" Value="Visible"/>
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style x:Key="BlackBorderStackPanelContainerStyle" TargetType="Border">
            <Setter Property="BorderBrush" Value="Black" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="CornerRadius" Value="10"/>
        </Style>



        <Style TargetType="ListView" x:Key="RoundListViewStyle">
            <Setter Property="Margin" Value="10"/>
            <Setter Property="BorderBrush" Value="Black"/>
            <Setter Property="BorderThickness" Value="2"/>
        </Style>

        <Style TargetType="ListViewItem">
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="FontSize" Value="22"/>
            <Setter Property="BorderThickness" Value="0,0,0,1"/>
            <Setter Property="BorderBrush" Value="LightGray"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="LightGray"/>
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>
            </Style.Triggers>
        </Style>



        <Style x:Key="BoldHeaderStyle" TargetType="{x:Type GridViewColumnHeader}">
            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <TextBlock Text="{TemplateBinding Content}" FontWeight="Bold" Foreground="Black"/>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="#DCDCDC"/>
            <Setter Property="Margin" Value="0 0 3 0"/>
        </Style>

        <Style x:Key="ToolTipStyle" TargetType="ToolTip">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToolTip">
                        <Border Background="White" BorderBrush="Black" BorderThickness="1.5" CornerRadius="10" Padding="10">
                            <ContentPresenter/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>

    <Grid x:Name="mainGrid">
        <Grid.RowDefinitions>
            <RowDefinition Height="37*"/>
            <RowDefinition Height="233*"/>
        </Grid.RowDefinitions>
        <Grid.LayoutTransform>
            <ScaleTransform x:Name="layoutTransform" />
        </Grid.LayoutTransform>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="380"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>



        <!--Основной боковой StackPanel-->
        <StackPanel Background="Black" Grid.RowSpan="2" >
            <TextBlock Height="24"/>
            <TextBlock x:Name="tbNameOfCompany" Text="My Company" Foreground="White" Height="186" FontSize="40" HorizontalAlignment="Center"/>
            <!--Боковой StackPanel где создаем все что угодно-->
            <StackPanel x:Name="StackForCreateAll" Margin="0,0,0,40"  Cursor="Hand" Style="{StaticResource StackPanelHoverEffectStyle}">
                <Border Background="#1f1d1d" CornerRadius="20" Height="40" Width="300">
                    <StackPanel Orientation="Horizontal">
                        <Image Source="Images/AddNew.png" Height="22" Width="50" Margin="50,0,20,0"/>
                        <TextBlock Text="Создать..." Width="89" Margin="0,5,60,0" Foreground="White" FontSize="20" Height="31"/>
                        <Expander x:Name="roundedExpander" ExpandDirection="Up" Height="21" Margin="0,1,0,0" Expanded="roundedExpander_Expanded" Collapsed="roundedExpander_Collapsed"/>
                    </StackPanel>
                </Border>
            </StackPanel>

            <!--Боковой StackPanel где создаем Входную накладную-->
            <StackPanel x:Name="StackForAddNewInvoce" Cursor="Hand" Visibility="Collapsed" Margin="0,0,0,20" Style="{StaticResource StackPanelHoverEffectStyle}">
                <Border Background="#1f1d1d" CornerRadius="20" Height="40" Width="255">
                    <StackPanel Orientation="Horizontal" Margin="0,0,-16,0" >
                        <Ellipse x:Name="EllipseInNewInvoice" Width="10" Height="10" Margin="0 10 -30 10" Fill="Green" Visibility="Collapsed"/>
                        <Image Source="Images/Invoice.png" Height="22" Width="50" Margin="10,0,20,0"/>
                        <Button x:Name="btnCreateNewInvoice" Content="Приходная накладная" Style="{StaticResource NoHighlightButtonStyle}" Width="274" Margin="-70,0,20,0" Foreground="White" FontSize="18" Click="btnCreateNewInvoice_Click"/>
                    </StackPanel>
                </Border>
            </StackPanel>

            <!--Боковой StackPanel где создаем Лабораторную карточку -->
            <StackPanel   x:Name="StackForAddNewLaboratoryCard"  Cursor="Hand"  Visibility="Collapsed" Margin="0,0,0,20" Style="{StaticResource StackPanelHoverEffectStyle}">
                <Border Background="#1f1d1d" CornerRadius="20" Height="40" Width="255">
                    <StackPanel Orientation="Horizontal" Margin="0,0,-16,0">
                        <Ellipse x:Name="EllipseInLaboratoryCard" Width="10" Height="10" Fill="Green" Margin="0 10 -30 10"  Visibility="Collapsed"/>
                        <Image Source="Images/Laboratory card.png" Height="22" Width="50" Margin="10,0,20,0"/>
                        <Button x:Name="btnCreateNewLaboratoryCard"  Content="Лабораторная карта" Style="{StaticResource NoHighlightButtonStyle}" Width="322" Margin="-90,0,20,0" Foreground="White" FontSize="20" Click="btnCreateNewLaboratoryСard_Click"/>
                    </StackPanel>
                </Border>
            </StackPanel>

            <!--Боковой StackPanel где создаем Регистр-->
            <StackPanel  x:Name="StackForAddNewRegister"  Cursor="Hand" Margin="0,0,0,20"  Visibility="Collapsed" Style="{StaticResource StackPanelHoverEffectStyle}">
                <Border Background="#1f1d1d" CornerRadius="20" Height="40" Width="255">
                    <StackPanel Orientation="Horizontal" Margin="0,0,-16,0">
                        <Ellipse Width="10" x:Name="EllipseInRegister" Height="10" Fill="Green" Margin="0 10 -30 10"  Visibility="Collapsed"/>
                        <Image Source="Images/Register.png" Height="22" Width="50" Margin="10,0,0,0"/>
                        <Button x:Name="btnCreateNewRegister" Content="Реестр" Style="{StaticResource NoHighlightButtonStyle}" Width="275" Margin="-60,0,20,0" Foreground="White" FontSize="20"  Click="btnCreateNewRegister_Click"/>
                    </StackPanel>
                </Border>
            </StackPanel>



            <!--Боковой StackPanel где создаем Акт доработки Prod-->
            <StackPanel  x:Name="StackForAddNewCompletionReportProd"  Cursor="Hand"  Margin="0,0,0,20"  Visibility="Collapsed" Style="{StaticResource StackPanelHoverEffectStyle}">
                <Border Background="#1f1d1d" CornerRadius="20" Height="40" Width="255">
                    <StackPanel Orientation="Horizontal" Margin="0,0,-16,0">
                        <Ellipse Width="10" Height="10"  x:Name="EllipseInCompletionReportProd" Fill="Green" Margin="0 10 -30 10"  Visibility="Collapsed"/>
                        <Image Source="Images/CompletionReport.png" Height="22" Width="50" Margin="10,0,0,0"/>
                        <Button x:Name="btnCreateNewCompletionReportProd"  Content="Акт доработки" Style="{StaticResource NoHighlightButtonStyle}" Width="265" Margin="-55,0,20,0" Foreground="White" FontSize="20" Click="btnCreateNewCompletionReportProd_Click"/>
                    </StackPanel>
                </Border>
            </StackPanel>


            <!--Боковой StackPanel где создаем Цену-->
            <StackPanel  x:Name="StackForAddNewPrice"  Cursor="Hand" Margin="0,0,0,20"  Visibility="Collapsed" Style="{StaticResource StackPanelHoverEffectStyle}">
                <Border Background="#1f1d1d" CornerRadius="20" Height="40" Width="255">
                    <StackPanel Orientation="Horizontal" Margin="0,0,-16,0">
                        <Ellipse Width="10" Height="10"  x:Name="EllipseInNewPrice" Fill="Green" Margin="0 10 -30 10"  Visibility="Collapsed"/>
                        <Image Source="Images/Price.png"  Height="22" Width="50" Margin="10,0,20,0"/>
                        <Button x:Name="btnCreateNewPrice"  Content="Прайс-лист" Style="{StaticResource NoHighlightButtonStyle}" Width="270" Margin="-80,0,20,0" Foreground="White" FontSize="20"  Click="btnCreateNewPrice_Click"/>
                    </StackPanel>
                </Border>
            </StackPanel>

            <!--Боковой StackPanel где создаем Акт доработки Acc-->
            <StackPanel  x:Name="StackForAddNewCompletionReportAcc"  Cursor="Hand"  Margin="0,0,0,20"  Visibility="Collapsed" Style="{StaticResource StackPanelHoverEffectStyle}">
                <Border Background="#1f1d1d" CornerRadius="20" Height="40" Width="255">
                    <StackPanel Orientation="Horizontal" Margin="0,0,-16,0">
                        <Ellipse Width="10" Height="10"  x:Name="EllipseInNewCompletionReportAcc" Fill="Green" Margin="0 10 -30 10"  Visibility="Collapsed"/>
                        <Image Source="Images/CompletionReport.png" Height="22" Width="50" Margin="10,0,0,0"/>
                        <Button x:Name="btnCreateNewCompletionReportAcc"  Content="Акт доработки" Style="{StaticResource NoHighlightButtonStyle}" Width="263" Margin="-55,0,20,0" Foreground="White" FontSize="20"  Click="btnCreateNewCompletionReportAcc_Click"/>
                    </StackPanel>
                </Border>
            </StackPanel>

            <!--Боковой StackPanel где создаем Расходная накладная-->
            <StackPanel  x:Name="StackForAddNewOutputInvoice"  Cursor="Hand" Margin="0,0,0,20"  Visibility="Collapsed" Style="{StaticResource StackPanelHoverEffectStyle}">
                <Border Background="#1f1d1d" CornerRadius="20" Height="40" Width="255">
                    <StackPanel Orientation="Horizontal" Margin="0,0,-16,0">
                        <Ellipse Width="10" Height="10" Fill="Green" x:Name="EllipseInNewOutputInvoice" Margin="0 10 -30 10"  Visibility="Collapsed"/>
                        <Image Source="Images/OutputInvoice.png"  Height="22" Width="50" Margin="10,0,20,0"/>
                        <Button x:Name="btnCreateNewOutputInvoice"  Content="Расходная накладная" Style="{StaticResource NoHighlightButtonStyle}" Width="301" Margin="-80,0,20,0" Foreground="White" FontSize="18" Click="btnCreateNewOutputInvoice_Click"/>
                    </StackPanel>
                </Border>
            </StackPanel>


            <!--Боковой StackPanel где создаем Новый Пользователь-->
            <StackPanel  x:Name="StackForAddNewUser"  Margin="0,0,0,20"  Cursor="Hand"  Visibility="Collapsed" Style="{StaticResource StackPanelHoverEffectStyle}">
                <Border Background="#1f1d1d" CornerRadius="20" Height="40" Width="255">
                    <StackPanel Orientation="Horizontal" Margin="0,0,-16,0">
                        <Ellipse Width="10" Height="10" Fill="Green" x:Name="EllipseInNewUser" Margin="0 10 -30 10"  Visibility="Collapsed"/>
                        <Image Source="Images/NewUser.png"  Height="22" Width="50" Margin="10,0,20,0"/>
                        <Button x:Name="btnAddNewUser"  Content="Сотрудник" Style="{StaticResource NoHighlightButtonStyle}" Width="271" Margin="-80,0,20,0" Foreground="White" FontSize="20"  Click="btnAddNewUser_Click"/>
                    </StackPanel>
                </Border>
            </StackPanel>


            <!--Боковой StackPanel для просмотра данных -->
            <StackPanel   x:Name="StackToViewData"  Visibility="Visible"  Cursor="Hand" Margin="0,0,0,40" Style="{StaticResource StackPanelHoverEffectStyle}">
                <Border Background="#1f1d1d" CornerRadius="20" Height="40" Width="300">
                    <StackPanel Orientation="Horizontal" Margin="0,0,-16,0">
                        <Ellipse Width="12" Height="12" x:Name="EllipseInViewData" Fill="Green" Margin="0 10 -80 10"  Visibility="Collapsed"/>
                        <Image Source="Images/ToViewData.png"  Height="22" Width="50" Margin="50,0,20,0" />
                        <Button x:Name="btnViewData" Content="Просмотр данных" FontSize="20" Style="{StaticResource NoHighlightButtonStyle}" Width="364" Margin="-120,0,20,0" Foreground="White"  Click="btnToViewData_Click"/>
                    </StackPanel>
                </Border>
            </StackPanel>

            <!--Боковой StackPanel для просмотра аналитики -->
            <StackPanel   x:Name="StackToViewAnalyze"  Margin="0,0,0,170"  Cursor="Hand" Style="{StaticResource StackPanelHoverEffectStyle}">
                <Border Background="#1f1d1d" CornerRadius="20" Height="40" Width="300">
                    <StackPanel Orientation="Horizontal" Margin="0,0,-16,0">
                        <Ellipse Width="12" Height="12" x:Name="EllipseInViewAnalyze" Fill="Green" Margin="0 10 -80 10"  Visibility="Collapsed"/>
                        <Image Source="Images/Analyze.png"  Height="22" Width="50" Margin="50,0,0,0" />
                        <Button x:Name="btnToViewAnalyze" Content="Аналитика" FontSize="20" Style="{StaticResource NoHighlightButtonStyle}" Width="315" Margin="-100,0,20,0" Foreground="White" Click="btnToViewNews_Click"/>
                    </StackPanel>
                </Border>
            </StackPanel>

            <!--Просто серенькая полосочка >.< -->
            <Separator HorizontalAlignment="Stretch" Margin="0,10" BorderBrush="Gray" BorderThickness="1"/>

            <!--Боковой StackPanel для просмотра настроек -->
            <StackPanel  x:Name="StackForSetting" Orientation="Horizontal" Height="40" Width="300">
                <Image Source="Images/Settings.png"  Height="22" Width="50" Margin="0,0,0,0" />
                <Button x:Name="btnForSetting" Content="Settings" FontSize="18" Style="{StaticResource NoHighlightButtonStyle}" Width="185" Margin="-60,0,0,2.9" Foreground="Gray"  Click="btnForSetting_Click" Height="29"/>
            </StackPanel>

            <!--Боковая кнопка для помощи -->
            <Button x:Name="btnForHelp" Content="Help" FontSize="15" Style="{StaticResource NoHighlightButtonStyle}" Width="116" Margin="-250,80,0,10" Foreground="Gray" Click="btnForHelp_Click"  Height="30"/>
            <!--Боковая кнопка для связи с нами -->
            <Button x:Name="btnForContact" Content="Contact us" FontSize="15" Style="{StaticResource NoHighlightButtonStyle}" Width="150" Margin="-208,0,0,30" Foreground="Gray"  Click="btnForContact_Click"  Height="30"/>

            <!--Боковой StackPanel для выхода из аккаунта -->
            <StackPanel  x:Name="StackForExitFromAcc" Orientation="Horizontal" Height="40" Width="300">
                <Image Source="Images/ExitFromAcc.png" Height="22" Width="40" Margin="0,0,0,0" />
                <Button x:Name="btnExitFromAcc" Content="Exit" FontSize="15" Style="{StaticResource NoHighlightButtonStyle}" Width="185" Margin="-60,0,0,2.9" Foreground="Gray" Click="btnExitFromAcc_Click"  Height="25"/>
            </StackPanel>
        </StackPanel>


        <!--Верхний Stack  для отображение кнопок выхода\смены размеров окна -->
        <StackPanel Grid.Column="1" Orientation="Horizontal" Margin="1439,0,-5,114" x:Name="StackPanelForTop" DockPanel.Dock="Top" Height="34">
            <Button x:Name="btnCollapse" Background="White" Style="{StaticResource NoHighlightButtonStyle}" Click="btnCollapse_Click">
                <Image x:Name="ExpandOrCollapse"  Source="Images/Collapse.png" Margin="0,0,20,0" Height="28" Width="24"/>
            </Button>
            
            <Button x:Name="btnExitFromApp" Background="White" Style="{StaticResource NoHighlightButtonStyle}" Click="btnExitFromApp_Click">
                <Image Source="Images/Exit.png"/>
            </Button>

        </StackPanel>


        <!--Верхний Stack  для отображение основной информации о времени и пользователе -->
        <StackPanel x:Name="StackForMainInfo" Orientation="Horizontal" Margin="0,43,0,30" Grid.Column="1" Background="White">
            <StackPanel Orientation="Vertical" Width="487" Margin="50,0,10,0" Height="86">
                <TextBlock x:Name ="tbForUserWelcoming" FontSize="28" FontWeight="Bold"/>
                <TextBlock x:Name="tbForWelcomingQuote" FontSize="15" Margin="0,10,0,0"/>
            </StackPanel>
            <TextBlock x:Name="tbForTime" FontSize="35" Width="267"  FontWeight="Bold" VerticalAlignment="Center" Height="63" Margin="0,0,60,0"/>
            <TextBlock x:Name="tbForDate" FontSize="35" Width="230"  FontWeight="Bold" VerticalAlignment="Center" Height="63" Margin="0,0,80,0"/>

            <Image Source="Images/UserProfile.png" Height="40" Width="40" Margin="-100,0,0,20" />
            <TextBlock x:Name="tbForUserInfo"  FontSize="26" Width="349"   FontWeight="Bold" Margin="-5,-10,0,0" Height="48"/>
        </StackPanel>

        <Ellipse x:Name="StatusEllipse" Width="13" Height="13"  Margin="1395,10,130,123" Grid.Column="1">
            <Ellipse.ToolTip>
                <ToolTip  Style="{StaticResource ToolTipStyle}" Placement="RelativePoint" HorizontalOffset="30" VerticalOffset="40" Foreground="Black" Content="Статус активности" FontSize="18"/>
            </Ellipse.ToolTip>
        </Ellipse>



        <!--Просто еще одна серенькая полосочка >.< -->
        <Separator Margin="0,131,-5,922" BorderBrush="Gray" BorderThickness="1" RenderTransformOrigin="0.5,0.5" Grid.Column="1" Grid.RowSpan="2"/>


        <!--Grid для создания Входящей накладой-->
        <Grid x:Name="GridForCreateInvioce" Grid.Column="1"  Grid.Row="1" Visibility="Collapsed" Margin="0,79,0,10">
            <Grid.RowDefinitions>
                <RowDefinition Height="119*"/>
                <RowDefinition Height="119*"/>
                <RowDefinition Height="119*"/>
                <RowDefinition Height="119*"/>
                <RowDefinition Height="119*"/>
                <RowDefinition Height="119*"/>
                <RowDefinition Height="206*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="241*"/>
                <ColumnDefinition Width="529*"/>
            </Grid.ColumnDefinitions>

            <TextBlock Text="Создание Входящей накладной" FontWeight="Bold" FontSize="36" Margin="481,-60,479,111" Grid.ColumnSpan="2"/>
            <StackPanel Margin="997,-76,26,153" Grid.Column="1">
                <Button Name="QuestionInInputInvoice" Width="35" HorizontalAlignment="Left"  Style="{StaticResource NoHighlightButtonStyle}" Height="33" Click="QuestionInInputInvoice_Click">
                    <Image Source="Images/Question.png"></Image>
                    <Button.ToolTip>
                        <ToolTip  Style="{StaticResource ToolTipStyle}" Placement="RelativePoint" HorizontalOffset="30" VerticalOffset="40" Foreground="Black" Content="Нажми на меня!" FontSize="18"></ToolTip>
                    </Button.ToolTip>
                </Button>

                <Popup x:Name="PopupInInputInvoice" StaysOpen="False" PlacementTarget="{Binding ElementName=QuestionInInputInvoice}" Placement="Left" PlacementRectangle="0,30,0,0" >
                    <Border Background="White" BorderThickness="1" BorderBrush="Transparent" Padding="10" CornerRadius="0">
                        <TextBlock FontSize="18" TextWrapping="Wrap">
                            <Run FontWeight="Bold">Создание приходной накладной:</Run>
                             <LineBreak/>
                            <Run>• Введите входящие данные продукции.</Run>
                              <LineBreak/>
                            <Run>• Все поля обязательны к заполнению.</Run>
                        </TextBlock>
                    </Border>
                </Popup>

            </StackPanel>

            <TextBlock Text="Введите дату прихода:" Foreground="Black"  FontSize="25" FontWeight="Bold" Margin="101,37,75,37" Grid.Row="5"/>
            <Border Background="#1f1d1d" CornerRadius="20"  Grid.Row="5" Grid.Column="1" Margin="44,37,736,26">
                <StackPanel Orientation="Horizontal"   Style="{StaticResource StackPanelHoverEffectStyle}">
                    <Image Source="Images/Calendar.png"  Height="22" Width="50" Margin="30,0,20,0" />
                    <Button x:Name="btnShowCalendarInputInvoice" Content="Выбрать дату" Click="btnShowCalendarInputInvoice_Click" FontSize="20"  Margin="-100,0,20,0"  Style="{StaticResource NoHighlightButtonStyle}" Foreground="White" Width="305"  />
                </StackPanel>
            </Border>
            <Calendar Style="{DynamicResource CalendarStyle1}" CalendarButtonStyle="{DynamicResource CalendarButtonStyle1}"  CalendarDayButtonStyle="{DynamicResource CalendarDayButtonStyle1}" CalendarItemStyle="{DynamicResource CalendarItemStyle1}"  
              x:Name="calendarInputInvoice" Visibility="Collapsed" SelectedDatesChanged="calendarInputInvoice_SelectedDatesChanged" 
              HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,96,0,0" Grid.Column="1" Grid.Row="4" Height="302" Grid.RowSpan="3" Width="385" />

            <TextBlock Text="Введите номер ТС:" Foreground="Black"  FontSize="25" FontWeight="Bold" Margin="100,37,127,37" Width="255" Height="36" Grid.Row="1"/>
            <TextBox x:Name="tbInputInvoiceVehicleNumber" Foreground="Black" FontSize="20" Margin="44,37,736,37"  Template="{DynamicResource RoundedTextBoxStyle}" Grid.Column="1" Grid.Row="1" SpellCheck.IsEnabled="True" Language="ru-ru"/>

            <TextBlock Text="Введите номер накладной:" Foreground="Black" Grid.Row="2" Margin="100,30,10,43"  FontSize="25" FontWeight="Bold" Height="36" />
            <TextBox x:Name="tbInputInvoiceNumber" Foreground="Black"  FontSize="20" Margin="44,32,736,43"  Template="{DynamicResource RoundedTextBoxStyle}" Grid.Column="1" Grid.Row="2" SpellCheck.IsEnabled="True" Language="ru-ru"/>

            <TextBlock Text="Введите поставщика:" Foreground="Black" FontSize="25" FontWeight="Bold" Margin="100,39,91,34" Width="291" Height="36" />
            <TextBox x:Name="tbInputInvoiceSupplier" Foreground="Black"  FontSize="20" Margin="44,42,736,34"  Template="{DynamicResource RoundedTextBoxStyle}" Grid.Column="1" SpellCheck.IsEnabled="True" Language="ru-ru"/>

            <TextBlock Text="Введите физический вес, кг:" Foreground="Black"  FontSize="25" FontWeight="Bold" Grid.Row="4" Margin="101,36,24,37" Height="36" />
            <TextBox x:Name="tbInputInvoicePhysicalWeight" Foreground="Black"  FontSize="20" Margin="44,38,736,37"  Template="{DynamicResource RoundedTextBoxStyle}" Grid.Column="1" Grid.Row="4" SpellCheck.IsEnabled="True" Language="ru-ru"/>

            <TextBlock Text="Введите название продукции:" Foreground="Black"  FontSize="25" FontWeight="Bold" Grid.Row="3" Margin="101,37,0,37" Width="381" Height="36"/>
            <TextBox x:Name="tbInputInvoiceProductName" Foreground="Black" FontSize="20" Margin="44,39,736,37"  Template="{DynamicResource RoundedTextBoxStyle}" Grid.Column="1" Grid.Row="3" SpellCheck.IsEnabled="True" Language="ru-ru" />


            <Border Background="#1f1d1d" CornerRadius="20"  Grid.Row="6" Grid.Column="1" Margin="706,51,130,95">
                <StackPanel Orientation="Horizontal" Style="{StaticResource StackPanelHoverEffectStyle}">
                    <Image Source="Images/AddNewDifItem.png"  Height="30" Width="54" Margin="20,0,0,0" />
                    <Button x:Name="btnCreateNewInputInvoice" Click="btnCreateNewInputInvoice_Click" Content="Создать" FontSize="20" Style="{StaticResource NoHighlightButtonStyle}" Width="111" Margin="10,0,20,0" Foreground="White" />
                </StackPanel>
            </Border>
        </Grid>

        <!--Grid для создания Лабораторной карты\Карточка анализа-->
        <Grid x:Name="GridForCreateLaboratoryCard" Grid.Column="1"  Grid.Row="1" Visibility="Collapsed">
            <Grid.RowDefinitions>
                <RowDefinition Height="539*"/>
                <RowDefinition Height="78*"/>
                <RowDefinition Height="87*"/>
                <RowDefinition Height="93*"/>
                <RowDefinition Height="135*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="397*"/>
                <ColumnDefinition Width="373*"/>

            </Grid.ColumnDefinitions>

            <StackPanel Margin="695,7,10,498" Grid.Column="1">
                <Button Name="QuestionInLaboratoryCard" Width="41" HorizontalAlignment="Left"  Style="{StaticResource NoHighlightButtonStyle}" Height="34" Click="QuestionInLaboratoryCard_Click">
                    <Image Source="Images/Question.png"></Image>
                    <Button.ToolTip>
                        <ToolTip  Style="{StaticResource ToolTipStyle}" Placement="RelativePoint" HorizontalOffset="30" VerticalOffset="40" Foreground="Black" Content="Нажми на меня!" FontSize="18"></ToolTip>
                    </Button.ToolTip>
                </Button>

                <Popup x:Name="PopupInLaboratoryCard" StaysOpen="False" PlacementTarget="{Binding ElementName=QuestionInLaboratoryCard}" Placement="Left" PlacementRectangle="0,30,0,0" >
                    <Border Background="White" BorderThickness="1" BorderBrush="Transparent" Padding="10" CornerRadius="0">
                        <TextBlock FontSize="18" TextWrapping="Wrap">
                        <Run FontWeight="Bold">Создание лабораторной карточки:</Run>
                        <LineBreak/>
                        <Run>• Выберите приходную накладную из списка.</Run>
                        <LineBreak/>
                        <Run>• Введите данные лабораторного анализа для выбранной партии продукции.</Run>
                        <LineBreak/>
                        <Run>• Установите значение допуска в производство.</Run>
                        <LineBreak/>
                        <Run  FontSize="22">• * </Run> <Run>- поля, обязательные к заполнению.</Run>
                        </TextBlock>
                    </Border>
                </Popup>

            </StackPanel>
            <TextBlock Text="Создание Лабораторной карточки" FontWeight="Bold" FontSize="36" Margin="470,24,458,470" Grid.ColumnSpan="2"/>

            <TextBlock Text="* Выберите входящюю накладную:" Margin="10,70,331,422" FontSize="25" FontWeight="Bold" />

            <ListView x:Name="lvForSelectInputInvoice"  FontSize="20" Grid.ColumnSpan="2" Margin="10,117,10,5" Style="{StaticResource RoundListViewStyle}" SelectionMode="Single">
                <ListView.View>
                    <GridView>
                        <GridViewColumn Header="№ Накладной:" DisplayMemberBinding="{Binding InvNumber}" Width="200" HeaderContainerStyle="{StaticResource BoldHeaderStyle}"/>
                        <GridViewColumn Header="Дата прихода:" DisplayMemberBinding="{Binding ArrivalDate, StringFormat='{}{0:dd.MM.yyyy}'}" Width="250"  HeaderContainerStyle="{StaticResource BoldHeaderStyle}"/>
                        <GridViewColumn Header="Номер ТС:" DisplayMemberBinding="{Binding VehicleNumber}" Width="200"  HeaderContainerStyle="{StaticResource BoldHeaderStyle}"/>
                        <GridViewColumn Header="Поставщик:" DisplayMemberBinding="{Binding Supplier.Title}" Width="200"  HeaderContainerStyle="{StaticResource BoldHeaderStyle}"/>
                        <GridViewColumn Header="Продукция:" DisplayMemberBinding="{Binding ProductTitle.Title}" Width="200"  HeaderContainerStyle="{StaticResource BoldHeaderStyle}"/>
                        <GridViewColumn Header="Физический вес, кг:" DisplayMemberBinding="{Binding PhysicalWeight}" Width="210"  HeaderContainerStyle="{StaticResource BoldHeaderStyle}"/>
                    </GridView>
                </ListView.View>
            </ListView>
            <StackPanel Orientation="Horizontal" Grid.Row="1">
                <TextBlock Text="* Введите значение сорной примеси, %:" Foreground="Black"  FontSize="25" FontWeight="Bold" Margin="10,5,30,0" Width="496" Height="44" />
                <TextBox x:Name="tbLaboratoryCardWeedness" Foreground="Black"  Height="32" FontSize="20" Width="190" Margin="10,0,0,0"  Template="{DynamicResource RoundedTextBoxStyle}" SpellCheck.IsEnabled="True" Language="ru-ru"/>
            </StackPanel>

            <StackPanel Orientation="Horizontal" Grid.Row="2">
                <TextBlock Text="* Введите значение влажности , %:" Foreground="Black"  FontSize="25" FontWeight="Bold" Margin="10,5,65,0" Width="460" Height="46" />
                <TextBox x:Name="tbLaboratoryCardHumidity" Foreground="Black"  Height="32" FontSize="20" Width="190" Margin="10,0,0,0"  Template="{DynamicResource RoundedTextBoxStyle}" SpellCheck.IsEnabled="True" Language="ru-ru"/>
            </StackPanel>

            <StackPanel Orientation="Horizontal" Grid.Row="3">
                <TextBlock Text="Введите значение зерновой примеси, %:" Foreground="Black"  FontSize="25" FontWeight="Bold" Margin="10,5,0,0" Width="524" Height="46" />
                <TextBox x:Name="tbLaboratoryCardGrainImpurity" Foreground="Black" Height="32" FontSize="20" Width="190" Margin="10,0,0,0"  Template="{DynamicResource RoundedTextBoxStyle}" SpellCheck.IsEnabled="True" Language="ru-ru"/>
            </StackPanel>

            <StackPanel Orientation="Horizontal" Grid.Row="4" Margin="0,0,458,10" Grid.ColumnSpan="2">
                <TextBlock Text="Особые отметки:" Foreground="Black"  FontSize="25" FontWeight="Bold" Margin="10,10,25,0" Width="238" Height="48" />
                <TextBox x:Name="tbLaboratoryCardSpecialMark" Foreground="Black"  Height="102" FontSize="20" Width="775" Margin="10,0,0,0"  Template="{DynamicResource RoundedTextBoxStyle}" TextWrapping="Wrap" SpellCheck.IsEnabled="True" Language="ru-ru"/>
            </StackPanel>

            <StackPanel Orientation="Horizontal" Margin="792,0,0,4" Grid.ColumnSpan="2" Grid.Row="1">
                <TextBlock Text="* Введите номер карточки анализа:" Foreground="Black"  FontSize="25" FontWeight="Bold" Margin="10,10,25,0" Width="451" Height="48" />
                <TextBox x:Name="tbLaboratoryCardAnalysisNumber" Foreground="Black" Height="32" FontSize="20" Width="190" Margin="10,0,0,0"  Template="{DynamicResource RoundedTextBoxStyle}" TextWrapping="Wrap" SpellCheck.IsEnabled="True" Language="ru-ru"/>
            </StackPanel>

            <StackPanel Grid.Row="3" Orientation="Horizontal" Height="93" VerticalAlignment="Center" Grid.Column="1" Margin="118,0,0,0">
                <TextBlock Text="* Допуск в производство:"  FontSize="25" Margin="10,20,90,21" Grid.Column="1" Grid.Row="3" FontWeight="Bold" Height="45"/>
                <CheckBox x:Name="cbLaboratoryCardIsProduction" Style="{DynamicResource CheckBoxStyleIsProd}" Margin="0,29,0,21" Grid.Row="3" Grid.Column="1" Width="206" Height="47" />
            </StackPanel>


            <Border Background="#1f1d1d" CornerRadius="20"  Grid.Row="4" Grid.Column="1" Margin="467,55,54,36">
                <StackPanel Orientation="Horizontal" Style="{StaticResource StackPanelHoverEffectStyle}">
                    <Image Source="Images/AddNewDifItem.png"  Height="30" Width="54" Margin="20,0,0,0" />
                    <Button  x:Name="btnForCreateNewLaboratoryCard" Click="btnForCreateNewLaboratoryCard_Click" Content="Создать" FontSize="20" Style="{StaticResource NoHighlightButtonStyle}" Width="111" Margin="10,0,20,0" Foreground="White"/>
                </StackPanel>
            </Border>
        </Grid>

        <!--Grid для создания Регистра-->
        <Grid x:Name="GridForCreateRegister" Grid.Column="1"  Grid.Row="1" Visibility="Collapsed">
            <Grid.RowDefinitions>
                <RowDefinition Height="97*"/>
                <RowDefinition Height="230*"/>
                <RowDefinition Height="139*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="295*"/>
                <ColumnDefinition Width="308*"/>
                <ColumnDefinition Width="167*"/>
            </Grid.ColumnDefinitions>
            <TextBlock Text="Создание Реестра" FontWeight="Bold" FontSize="36" Margin="0,10,286,134" Grid.Column="1"/>

            <StackPanel  Grid.Column="0" Margin="25,20,158,15">
                <TextBlock Text="* Дата прихода:" Foreground="Black"  FontSize="25" FontWeight="Bold" Margin="0,70,0,10" Width="202" />
                <Border Background="#1f1d1d" CornerRadius="15" Width="238" Height="38">
                    <StackPanel Orientation="Horizontal"  Style="{StaticResource StackPanelHoverEffectStyle}">
                        <Image Source="Images/Calendar.png"  Height="22" Width="50" Margin="30,0,20,0" />
                        <Button x:Name="btnShowCalendarRegister" Content="Выбрать дату" Click="btnShowCalendarRegister_Click"   FontSize="20"  Margin="-80,0,20,0"  Style="{StaticResource NoHighlightButtonStyle}" Foreground="White" Width="248"  />
                    </StackPanel>
                </Border>
            </StackPanel>

            <StackPanel Margin="253,10,41,151" Grid.Column="2">
                <Button Name="QuestionInRegister" Width="41" HorizontalAlignment="Left"  Style="{StaticResource NoHighlightButtonStyle}" Height="34" Click="QuestionInRegister_Click">
                    <Image Source="Images/Question.png"></Image>
                    <Button.ToolTip>
                        <ToolTip  Style="{StaticResource ToolTipStyle}" Placement="RelativePoint" HorizontalOffset="30" VerticalOffset="40" Foreground="Black" Content="Нажми на меня!" FontSize="18"></ToolTip>
                    </Button.ToolTip>
                </Button>

                <Popup x:Name="PopupInRegister" StaysOpen="False" PlacementTarget="{Binding ElementName=PopupInRegister}" Placement="Left" PlacementRectangle="0,30,0,0" >
                    <Border Background="White" BorderThickness="1" BorderBrush="Transparent" Padding="10" CornerRadius="0">
                        <TextBlock FontSize="18" TextWrapping="Wrap">
                     
                     <Run FontWeight="Bold"> Создание суточного Реестра приходных накладных:</Run>
                     <LineBreak/>
                     <Run>• Выберите лабораторные карточки для создания Ресстра.</Run>
                     <LineBreak/>
                     <Run>• Используйте фильтрацию для сортировки списка Лабораторных карточек.</Run>
                     <LineBreak/>
                     <Run>• В фильтрации выбор Даты обязателен.</Run>
                     <LineBreak/>
                     <Run TextDecorations="Underline">• Реестр создается на основе Лабораторных карточек продукции с определенными: </Run>
                     <LineBreak/>
                     <Run TextDecorations="Underline">Наименованием и Поставщиком, принятых за определенную Дату.</Run>
                     <LineBreak/>
                     <Run>• Введите базовые показатели качества для данной партии продукции.</Run>
                    <LineBreak/>
                    <Run  FontSize="22">• * </Run> <Run>- поля, обязательные к заполнению.</Run>


                        </TextBlock>
                    </Border>
                </Popup>

            </StackPanel>

            <StackPanel Margin="437,27,415,2" Grid.ColumnSpan="2">
                <TextBlock Text="Поставщик:" Foreground="Black" FontSize="25" FontWeight="Bold" Margin="10,70,0,10" Width="166" />
                <TextBox   x:Name="tbForFilterSupplierInRegister"  Foreground="Black"  Height="32" FontSize="20" Width="280" Margin="10,0,0,0"  Template="{DynamicResource RoundedTextBoxStyle}"  SpellCheck.IsEnabled="True" Language="ru-ru"/>
            </StackPanel>
            <StackPanel  Grid.Column="1" Margin="248,27,10,458" Grid.RowSpan="2">
                <TextBlock Text="Наименование продукции:" Foreground="Black" FontSize="25" FontWeight="Bold" Margin="10,70,0,10" Width="347" />
                <TextBox   x:Name="tbForFilterNameOfProductInRegister"  Foreground="Black"  Height="32" FontSize="20" Width="280"  Template="{DynamicResource RoundedTextBoxStyle}"  SpellCheck.IsEnabled="True" Language="ru-ru"/>
            </StackPanel>
            <Border Background="#1f1d1d" CornerRadius="20" Grid.Column="2" Margin="10,122,136,28">
                <StackPanel Orientation="Horizontal"  Style="{StaticResource StackPanelHoverEffectStyle}" Margin="0,0,-11,0">
                    <Image Source="Images/Filter.png"  Height="26" Width="32" Margin="20,0,0,0" />
                    <Button x:Name="btnFiltrationInCreateRegister" Click="btnFiltrationInCreateRegister_Click"  Content="Фильтрация"  FontSize="20" Style="{StaticResource NoHighlightButtonStyle}" Width="126" Margin="0,0,20,0" Foreground="White"/>
                </StackPanel>
            </Border>
            <Border Background="#1f1d1d" CornerRadius="10" Margin="239,122,41,28" Grid.Column="2">
                <StackPanel Orientation="Horizontal" Style="{StaticResource StackPanelHoverEffectStyle}">
                    <Button x:Name="btnClearFiltrationInCreateRegister" Click="btnClearFiltrationInCreateRegister_Click" FontSize="20" Style="{StaticResource NoHighlightButtonStyle}" Width="55" Margin="0,0,20,0" Foreground="White">
                        <Image Source="Images/Reset.png" Height="30" Width="30" />
                        <Button.ToolTip>
                            <ToolTip  Style="{StaticResource ToolTipStyle}" Placement="RelativePoint" HorizontalOffset="30" VerticalOffset="40" Foreground="Black" Content="Сброс фильтрации"></ToolTip>
                        </Button.ToolTip>
                    </Button>
                </StackPanel>
            </Border>
            <TextBlock Text="* Выберите лабораторные карточки:" Margin="10,189,112,416" FontSize="25" FontWeight="Bold" Grid.RowSpan="2" />
            <ListView x:Name="lvForSelectLaboratoryCard" FontSize="20" Grid.ColumnSpan="3" Margin="10,36,10,0" Style="{StaticResource RoundListViewStyle}" SelectionMode="Multiple" Grid.Row="1">
                <ListView.View>
                    <GridView>
                        <GridViewColumn Header="№ Лаб.карточки:" DisplayMemberBinding="{Binding LabCardNumber}" Width="180" HeaderContainerStyle="{StaticResource BoldHeaderStyle}"/>
                        <GridViewColumn Header="Дата прихода:" DisplayMemberBinding="{Binding IdNavigation.ArrivalDate, StringFormat='{}{0:dd.MM.yyyy}'}" Width="180" HeaderContainerStyle="{StaticResource BoldHeaderStyle}"/>
                        <GridViewColumn Header="Поставщик:" DisplayMemberBinding="{Binding IdNavigation.Supplier.Title}" Width="200"  HeaderContainerStyle="{StaticResource BoldHeaderStyle}"/>
                        <GridViewColumn Header="Продукция:" DisplayMemberBinding="{Binding IdNavigation.ProductTitle.Title}" Width="200"  HeaderContainerStyle="{StaticResource BoldHeaderStyle}"/>
                        <GridViewColumn Header="Физический вес, кг" DisplayMemberBinding="{Binding IdNavigation.PhysicalWeight}" Width="210" HeaderContainerStyle="{StaticResource BoldHeaderStyle}"/>
                        <GridViewColumn Header="Сорная примесь, %:" DisplayMemberBinding="{Binding Weediness}" Width="210"  HeaderContainerStyle="{StaticResource BoldHeaderStyle}"/>
                        <GridViewColumn Header="Влажность, %:" DisplayMemberBinding="{Binding Moisture}" Width="160"  HeaderContainerStyle="{StaticResource BoldHeaderStyle}"/>
                        <GridViewColumn Header="Производство:" DisplayMemberBinding="{Binding IsProduction}" Width="200"  HeaderContainerStyle="{StaticResource BoldHeaderStyle}"/>
                    </GridView>
                </ListView.View>
            </ListView>

            <StackPanel Orientation="Horizontal" Grid.Column="0" Grid.Row="2" Margin="0,0,2,200" Grid.ColumnSpan="2">
                <TextBlock Text="* Введите номер реестра:" Foreground="Black" FontSize="25" FontWeight="Bold" Margin="10,0,0,0" Width="606" Height="46" />
                <TextBox x:Name="tbRegisterNumber" Foreground="Black" Height="32" FontSize="20" Width="175" Margin="30,0,0,0"  Template="{DynamicResource RoundedTextBoxStyle}" SpellCheck.IsEnabled="True" Language="ru-ru"/>
            </StackPanel>

            <StackPanel Orientation="Horizontal" Grid.Column="0" Grid.Row="2" Margin="0,78,2,70" Grid.ColumnSpan="2">
                <TextBlock Text="* Введите базовое значение сорной примеси, %:" Foreground="Black" FontSize="25" FontWeight="Bold" Margin="10,0,0,0" Width="606" Height="46" />
                <TextBox x:Name="tbRegisterImpurity" Foreground="Black" Height="32" FontSize="20" Width="175" Margin="30,0,0,0"  Template="{DynamicResource RoundedTextBoxStyle}" SpellCheck.IsEnabled="True" Language="ru-ru"/>
            </StackPanel>

            <StackPanel Grid.Row="2" Orientation="Horizontal" Margin="0,117,0,-18" Grid.ColumnSpan="2">
                <TextBlock Text="* Введите базовое значение влажности, %:" Foreground="Black" FontSize="25" FontWeight="Bold" Margin="10,70,0,30" Width="534" />
                <TextBox x:Name="tbRegisterHumidity" Foreground="Black" Height="32" FontSize="20" Width="175" Margin="102,0,0,0"  Template="{DynamicResource RoundedTextBoxStyle}" SpellCheck.IsEnabled="True" Language="ru-ru"/>
            </StackPanel>


            <Border Background="#1f1d1d" CornerRadius="20 " Grid.Column="2"  Grid.Row="2" Margin="56,174,58,58">
                <StackPanel Orientation="Horizontal"  Style="{StaticResource StackPanelHoverEffectStyle}">
                    <Image Source="Images/AddNewDifItem.png"  Height="30" Width="54" Margin="20,0,0,0" />
                    <Button Content="Создать" x:Name="btnForCreateNewRegister" Click="btnForCreateNewRegister_Click" FontSize="20" Style="{StaticResource NoHighlightButtonStyle}" Width="111" Margin="10,0,20,0" Foreground="White"/>
                </StackPanel>
            </Border>
            <Calendar Style="{DynamicResource CalendarStyle1}" CalendarButtonStyle="{DynamicResource CalendarButtonStyle1}"  CalendarDayButtonStyle="{DynamicResource CalendarDayButtonStyle1}" CalendarItemStyle="{DynamicResource CalendarItemStyle1}"   x:Name="calendarRegister" SelectedDatesChanged="calendarRegister_SelectedDatesChanged" Visibility="Collapsed" Margin="66,126,164,210" Grid.RowSpan="2" />
        </Grid>


        <!--Grid для создания Акта доработки-->
        <Grid x:Name="GridForCompletionReportProd" Grid.Column="1"  Grid.Row="1" Visibility="Collapsed">
            <Grid.RowDefinitions>
                <RowDefinition Height="97*"/>
                <RowDefinition Height="213*"/>
                <RowDefinition Height="156*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="295*"/>
                <ColumnDefinition Width="308*"/>
                <ColumnDefinition Width="167*"/>
            </Grid.ColumnDefinitions>
            <TextBlock Text="Создание Акта доработки" FontWeight="Bold" FontSize="36" Margin="562,10,165,134" Grid.ColumnSpan="2"/>


            <StackPanel Margin="253,10,41,151" Grid.Column="2">
                <Button Name="QuestionInCompletionReportProd" Width="41" HorizontalAlignment="Left"  Style="{StaticResource NoHighlightButtonStyle}" Height="34" Click="QuestionInCompletionReportProd_Click">
                    <Image Source="Images/Question.png"></Image>
                    <Button.ToolTip>
                        <ToolTip  Style="{StaticResource ToolTipStyle}" Placement="RelativePoint" HorizontalOffset="30" VerticalOffset="40" Foreground="Black" Content="Нажми на меня!" FontSize="18"></ToolTip>
                    </Button.ToolTip>
                </Button>

                <Popup x:Name="PopupInCompletionReportProd" StaysOpen="False" PlacementTarget="{Binding ElementName=QuestionInCompletionReportProd}" Placement="Left" PlacementRectangle="0,30,0,0" >
                    <Border Background="White" BorderThickness="1" BorderBrush="Transparent" Padding="10" CornerRadius="0">
                        <TextBlock FontSize="18" TextWrapping="Wrap">
          
                        <Run FontWeight="Bold"> Создание Акта доработки:</Run>
                        <LineBreak/>
                        <Run>• Выберите Реестры для создания Акта доработки.</Run>
                        <LineBreak/>
                        <Run>• Используйте фильтрацию для сортировки списка Реестров.</Run>
                        <LineBreak/>
                        <Run TextDecorations="Underline">• Акт доработки создается на основе Реестов с определенными: </Run>
                        <LineBreak/>
                        <Run TextDecorations="Underline">Наименованием и Поставщиком.</Run>
                        <LineBreak/>
                        <Run>• Введите базовые показатели качества для данной партии продукции.</Run>
                        <LineBreak/>
                        <Run>• Все поля обязательны к заполнению.</Run>


                        </TextBlock>
                    </Border>
                </Popup>

            </StackPanel>

            <TextBlock Text="Поставщик:" Foreground="Black"  FontSize="25" FontWeight="Bold" Margin="65,93,359,67" />
            <TextBox  x:Name="tbForFilterSupplierInReportProd"  Foreground="Black"  FontSize="20" Margin="278,97,32,65"  Template="{DynamicResource RoundedTextBoxStyle}" SpellCheck.IsEnabled="True" Language="ru-ru"/>


            <TextBlock Text="Наименование продукции:" Foreground="Black"  FontSize="25" FontWeight="Bold" Margin="8,93,240,61" Grid.Column="1" />
            <TextBox   x:Name="tbForFilterNameOfProductInReportProd"   Foreground="Black"  FontSize="20"  Template="{DynamicResource RoundedTextBoxStyle}" Grid.Column="1" Grid.ColumnSpan="2" Margin="376,97,294,65" SpellCheck.IsEnabled="True" Language="ru-ru"/>


            <Border Background="#1f1d1d" CornerRadius="20" Grid.Column="2" Margin="98,88,48,62">
                <StackPanel Orientation="Horizontal"  Style="{StaticResource StackPanelHoverEffectStyle}">
                    <Image Source="Images/Filter.png"  Height="26" Width="32" Margin="20,0,0,0" />
                    <Button Content="Фильтрация" x:Name="btnFiltrationInCompletionReportProd" Click="btnFiltrationInCompletionReportProd_Click" FontSize="20" Style="{StaticResource NoHighlightButtonStyle}" Width="123" Margin="0,0,20,0" Foreground="White"/>
                </StackPanel>
            </Border>
            <TextBlock Text="Выберите реестры:" Margin="17,180,311,401" FontSize="25" FontWeight="Bold" Grid.RowSpan="2" />

            <ListView  x:Name="lvForSelectRegister" SelectionMode="Multiple" FontSize="20" Grid.ColumnSpan="3" Grid.Row="1" Margin="17,25,10,0"  Style="{StaticResource RoundListViewStyle}">
                <ListView.View>
                    <GridView>
                        <GridViewColumn Header="№ Реестра:" DisplayMemberBinding="{Binding RegisterNumber}" Width="150" HeaderContainerStyle="{StaticResource BoldHeaderStyle}"/>
                        <GridViewColumn Header="Дата прихода:" DisplayMemberBinding="{Binding ArrivalDate, StringFormat='{}{0:dd.MM.yyyy}'}" Width="180" HeaderContainerStyle="{StaticResource BoldHeaderStyle}"/>
                        <GridViewColumn Header="Поставщик:" DisplayMemberBinding="{Binding Supplier.Title}" Width="200"  HeaderContainerStyle="{StaticResource BoldHeaderStyle}"/>
                        <GridViewColumn Header="Продукция:" DisplayMemberBinding="{Binding ProductTitle.Title}" Width="200"  HeaderContainerStyle="{StaticResource BoldHeaderStyle}"/>
                        <GridViewColumn Header="Физический вес, кг:" DisplayMemberBinding="{Binding PhysicalWeightReg}" Width="200" HeaderContainerStyle="{StaticResource BoldHeaderStyle}"/>
                        <GridViewColumn Header="Усушка, кг:" DisplayMemberBinding="{Binding ShrinkageReg}" Width="200" HeaderContainerStyle="{StaticResource BoldHeaderStyle}"/>
                        <GridViewColumn Header="Сорная убыль, кг:" DisplayMemberBinding="{Binding WasteReg}" Width="200" HeaderContainerStyle="{StaticResource BoldHeaderStyle}"/>
                        <GridViewColumn Header="Зачетный вес, кг:" DisplayMemberBinding="{Binding AccWeightReg}" Width="200" HeaderContainerStyle="{StaticResource BoldHeaderStyle}"/>
                        <GridViewColumn Header="Количество сушки, т * %:" DisplayMemberBinding="{Binding QuantityesDryingReg, StringFormat={}{0:F3}}" Width="260" HeaderContainerStyle="{StaticResource BoldHeaderStyle}"/>
                    </GridView>
                </ListView.View>
            </ListView>



            <TextBlock Text="Введите дату составления акта:" Foreground="Black"  FontSize="25" FontWeight="Bold" Margin="17,34,175,235" Width="398" Height="43" Grid.Row="2" />


            <TextBlock Text="Введите номер акта доработки:" Foreground="Black"  FontSize="25" FontWeight="Bold"   Margin="17,113,175,156" Grid.Row="2"  />
            <TextBox  x:Name="tbForReportNumCompletionReportProd"  Foreground="Black"  FontSize="20" Margin="478,117,472,165"  Template="{DynamicResource RoundedTextBoxStyle}" SpellCheck.IsEnabled="True" Language="ru-ru" Grid.Row="2" Grid.ColumnSpan="2"/>

            <Border Background="#1f1d1d" CornerRadius="20"  Grid.Row="2" Margin="478,33,472,239" Grid.ColumnSpan="2">
                <StackPanel Orientation="Horizontal" Margin="0,0,0,0"  Style="{StaticResource StackPanelHoverEffectStyle}">
                    <Image Source="Images/Calendar.png"  Height="22" Width="50" Margin="30,0,20,0" />
                    <Button x:Name="btnShowCalendarCompletionReportProd" Content="Выбрать дату" Click="btnShowCalendarCompletionReportProd_Click"  FontSize="20"  Margin="-100,0,20,0"  Style="{StaticResource NoHighlightButtonStyle}" Foreground="White" Width="275"  />
                </StackPanel>
            </Border>
            <Calendar Style="{DynamicResource CalendarStyle1}" CalendarButtonStyle="{DynamicResource CalendarButtonStyle1}"  CalendarDayButtonStyle="{DynamicResource CalendarDayButtonStyle1}" CalendarItemStyle="{DynamicResource CalendarItemStyle1}"   x:Name="calendarCompletionReportProd" Visibility="Collapsed" SelectedDatesChanged="calendarCompletionReportProd_SelectedDatesChanged"  HorizontalAlignment="Left" VerticalAlignment="Center" Margin="438,0,0,0" Grid.Row="2" Height="310" Width="384" Grid.ColumnSpan="2" />




            <Border Background="#1f1d1d" CornerRadius="20 " Grid.Column="2"  Grid.Row="2" Margin="86,156,37,114">
                <StackPanel Orientation="Horizontal"  Style="{StaticResource StackPanelHoverEffectStyle}">
                    <Image Source="Images/AddNewDifItem.png"  Height="30" Width="54" Margin="20,0,0,0" />
                    <Button Content="Создать" x:Name="btnForCreateNewCompletionReportProd" Click="btnForCreateNewCompletionReportProd_Click" FontSize="20" Style="{StaticResource NoHighlightButtonStyle}" Width="99" Margin="10,0,20,0" Foreground="White"/>
                </StackPanel>
            </Border>
        </Grid>


        <!--Grid для создания Цены-->
        <Grid x:Name="GridForCreateNewPrice" Grid.Column="1"  Grid.Row="1" Visibility="Hidden">
            <Grid.RowDefinitions>
                <RowDefinition Height="263*"/>
                <RowDefinition Height="402*"/>

            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="871*"/>
                <ColumnDefinition Width="669*"/>

            </Grid.ColumnDefinitions>

            <StackPanel Margin="594,10,30,314" Grid.Column="1">
                <Button Name="QuestionInNewPrice" Width="41" HorizontalAlignment="Left"  Style="{StaticResource NoHighlightButtonStyle}" Height="34" Click="QuestionInNewPrice_Click">
                    <Image Source="Images/Question.png"></Image>
                    <Button.ToolTip>
                        <ToolTip  Style="{StaticResource ToolTipStyle}" Placement="RelativePoint" HorizontalOffset="30" VerticalOffset="40" Foreground="Black" Content="Нажми на меня!" FontSize="18"></ToolTip>
                    </Button.ToolTip>
                </Button>

                <Popup x:Name="PopupInNewPrice" StaysOpen="False" PlacementTarget="{Binding ElementName=QuestionInNewPrice}" Placement="Left" PlacementRectangle="0,30,0,0" >
                    <Border Background="White" BorderThickness="1" BorderBrush="Transparent" Padding="10" CornerRadius="0">
                        <TextBlock FontSize="18" TextWrapping="Wrap">
                        <Run FontWeight="Bold"> Создание Прайс-листа:</Run>
                        <LineBreak/>
                        <Run>• Создайте Прайс-лист.</Run>
                        <LineBreak/>
                        <Run>• Добавьте в Прайс-лист Технологические операции.</Run>
                        <LineBreak/>
                        <Run>• Сохраните Прайс-лист.</Run>
                        <LineBreak/>
                        <Run>• Все поля обязательны к заполнению.</Run>
                        </TextBlock>
                    </Border>
                </Popup>

            </StackPanel>

            <TextBlock Text="Создание Прайс-листа" FontWeight="Bold" FontSize="36" Margin="578,26,542,285" Grid.ColumnSpan="2"/>

            <Separator Margin="0,223,0,106" BorderBrush="Gray" BorderThickness="1" Grid.ColumnSpan="2"/>

            <TextBlock Text="Добавление технологических операций:" Margin="119,325,232,563" FontSize="25" FontWeight="Bold" Grid.RowSpan="2"/>

            <Separator Margin="0,223,0,294" BorderBrush="Gray" BorderThickness="1" Grid.Row="1" Grid.ColumnSpan="2"/>




            <StackPanel Grid.Column="0" Margin="20,136,70,151" Orientation="Horizontal">
                <TextBlock Text="Наименование продукции:" Foreground="Black"  FontSize="25" FontWeight="Bold" Margin="100,0,0,0" Width="348" Height="40" />
                <TextBox x:Name="tbPriceProductName" Foreground="Black" Height="32" FontSize="20" Width="280" Margin="10,0,0,0"  Template="{DynamicResource RoundedTextBoxStyle}" SpellCheck.IsEnabled="True" Language="ru-ru"/>
            </StackPanel>

            <StackPanel Margin="119,38,0,466" Grid.Row="1" Orientation="Horizontal">
                <TextBlock Text="Наименование операции:" Foreground="Black" FontSize="25" FontWeight="Bold" Width="360" Height="38" />
                <TextBox x:Name="tbPriceOperationName" Foreground="Black"   Height="32" FontSize="20" Width="380" Margin="0,0,0,0"  Template="{DynamicResource RoundedTextBoxStyle}" SpellCheck.IsEnabled="True" Language="ru-ru"/>
            </StackPanel>

            <StackPanel Grid.Row="1" Margin="119,141,169,345" Orientation="Horizontal">
                <TextBlock Text="Стоимость операции, грн/т:" Foreground="Black"  FontSize="25" FontWeight="Bold" Width="352" Height="41" />
                <TextBox x:Name="tbPriceOperationCost" Foreground="Black"  Height="32" FontSize="20" Width="201" Margin="10,0,0,0"  Template="{DynamicResource RoundedTextBoxStyle}" SpellCheck.IsEnabled="True" Language="ru-ru"/>
            </StackPanel>

            <Border Background="#1f1d1d" CornerRadius="20" Height="42" Margin="113,154,371,173" Grid.Column="1">
                <StackPanel Orientation="Horizontal"  Style="{StaticResource StackPanelHoverEffectStyle}">
                    <Image Source="Images/AddNewDifItem.png"  Height="30" Width="48" Margin="20,0,0,0" />
                    <Button Content="Cоздать" x:Name="btnForCreateNewTitlePriceList" Click="btnForCreateNewTitlePriceList_Click"  FontSize="20" Style="{StaticResource NoHighlightButtonStyle}" Width="84" Margin="10,0,20,0" Foreground="White" />
                </StackPanel>
            </Border>


            <Border Background="#1f1d1d" CornerRadius="20" Height="42" Width="204" Grid.Column="1" Margin="113,158,352,363" Grid.Row="1">
                <StackPanel Orientation="Horizontal"  Style="{StaticResource StackPanelHoverEffectStyle}">
                    <Image Source="Images/AddNewDifItem.png"  Height="30" Width="54" Margin="20,0,0,0" />
                    <Button Content="Добавить" x:Name="btnForCreateNewOperation" Click="btnForCreateNewOperation_Click"  FontSize="20" Style="{StaticResource NoHighlightButtonStyle}" Width="99" Margin="10,0,20,0" Foreground="White"/>
                </StackPanel>
            </Border>



            <Border Background="#1f1d1d" CornerRadius="20" Grid.Column="1" Margin="399,450,66,71" Grid.Row="1">
                <StackPanel Orientation="Horizontal"  Style="{StaticResource StackPanelHoverEffectStyle}">
                    <Image Source="Images/Save.png"  Height="30" Width="54" Margin="20,0,0,0" />
                    <Button Content="Сохранить" x:Name="btnForCreatePriceList" Click="btnForCreatePriceList_Click" FontSize="20" Style="{StaticResource NoHighlightButtonStyle}" Width="110" Margin="0,0,20,0" Foreground="White"/>
                </StackPanel>
            </Border>
        </Grid>

        <!--Grid для создания Расходной накладной-->
        <Grid x:Name="GridForCreateOutputInvoice" Grid.Column="1"  Grid.Row="1" Visibility="Collapsed">
            <Grid.RowDefinitions>
                <RowDefinition Height="97*"/>
                <RowDefinition Height="230*"/>
                <RowDefinition Height="139*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="295*"/>
                <ColumnDefinition Width="308*"/>
                <ColumnDefinition Width="167*"/>
            </Grid.ColumnDefinitions>
            <StackPanel Margin="257,26,37,131" Grid.Column="2">
                <Button Name="QuestionInOutputInvoice" Width="41" HorizontalAlignment="Left"  Style="{StaticResource NoHighlightButtonStyle}" Height="34" Click="QuestionInOutputInvoice_Click">
                    <Image Source="Images/Question.png"></Image>
                    <Button.ToolTip>
                        <ToolTip  Style="{StaticResource ToolTipStyle}" Placement="RelativePoint" HorizontalOffset="30" VerticalOffset="40" Foreground="Black" Content="Нажми на меня!" FontSize="18"></ToolTip>
                    </Button.ToolTip>
                </Button>

                <Popup x:Name="PopupInOutputInvoice" StaysOpen="False" PlacementTarget="{Binding ElementName=QuestionInOutputInvoice}" Placement="Left" PlacementRectangle="0,30,0,0" >
                    <Border Background="White" BorderThickness="1" BorderBrush="Transparent" Padding="10" CornerRadius="0">
                        <TextBlock FontSize="18" TextWrapping="Wrap">
                        <Run FontWeight="Bold">Создание Расходной накладной:</Run>
                        <LineBreak/>
                        <Run>• Выберите Складскую единицу, предназначнную для отгрузки.</Run>
                        <LineBreak/>
                        <Run>• Используйте фильтрацию для сортировки списка Складских единиц.</Run>
                        <LineBreak/>
                        <Run>• Выберите категорию и количество отгружаемой продукции.</Run>
                        <LineBreak/>
                        <Run>• Заполните остальные поля.</Run>
                        <LineBreak/>
                        <Run>• Все поля обязательны к заполнению.</Run>
                        </TextBlock>
                    </Border>
                </Popup>

            </StackPanel>

            <TextBlock Text="Создание Расходной накладной" FontWeight="Bold" FontSize="36" Margin="479,26,145,119" Grid.ColumnSpan="2"/>

            <TextBlock Text="Поставщик:" Foreground="Black"  FontSize="25" FontWeight="Bold" Margin="76,123,348,28" Width="166" />
            <TextBox  x:Name="tbForFilterSupplierInOutputInvoice"  Foreground="Black"  Height="32" FontSize="20" Width="280" Margin="275,123,35,39"  Template="{DynamicResource RoundedTextBoxStyle}"   SpellCheck.IsEnabled="True" Language="ru-ru"/>


            <TextBlock Text="Наименование продукции:" Foreground="Black" FontSize="25" FontWeight="Bold" Margin="10,122,238,32" Width="368" Grid.Column="1" />
            <TextBox   x:Name="tbForFilterNameOfProductInOutputInvoice"   Foreground="Black"  Height="32" FontSize="20" Width="280"  Template="{DynamicResource RoundedTextBoxStyle}" Grid.Column="1" Grid.ColumnSpan="2" Margin="378,123,292,39"   SpellCheck.IsEnabled="True" Language="ru-ru"/>

            <TextBlock Text="Выберите Складскую единицу:" FontSize="30" Margin="10,0,116,413" FontWeight="Bold" Grid.Row="1" />

            <TextBlock Text="Полная информация Складской единицы:" FontSize="30" Grid.Row="1" Margin="194,0,92,396" FontWeight="Bold" Grid.Column="1" Grid.ColumnSpan="2"/>
            <DataGrid x:Name="dgForAdditionalInfoInOutputInvoice" AutoGenerateColumns="False" FontSize="20" Margin="194,47,14,0" FontWeight="Bold"  HeadersVisibility="Column" IsReadOnly="True"  VirtualizingStackPanel.IsVirtualizing="True" Grid.ColumnSpan="2" Grid.Row="1" Grid.Column="1">
                <DataGrid.Resources>
                    <Style TargetType="{x:Type DataGridColumnHeader}">
                        <Setter Property="Background" Value="#DCDCDC"/>
                        <Setter Property="Foreground" Value="Black"/>
                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                        <Setter Property="Padding" Value="5"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                        <Setter Property="VirtualizingStackPanel.IsVirtualizing" Value="True"/>
                        <Setter Property="Margin" Value="0 0 3 0"/>
                    </Style>
                    <Style TargetType="{x:Type DataGridCell}">
                        <Setter Property="Background" Value="Gray"  />
                        <Setter Property="Foreground" Value="Black"/>
                        <Setter Property="BorderBrush" Value="Black"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                        <Setter Property="Margin" Value="0 0 3 0"/>
                    </Style>
                    <Style TargetType="{x:Type DataGrid}">
                        <Setter Property="BorderBrush" Value="Black"/>
                        <Setter Property="BorderThickness" Value="2"/>
                        <Setter Property="Margin" Value="0 0 3 0"/>
                    </Style>
                    <Style x:Key="CustomSelectionStyle" TargetType="{x:Type DataGridCell}">
                        <Setter Property="BorderBrush" Value="Gray"/>
                        <Setter Property="Margin" Value="0 0 3 0"/>
                    </Style>
                </DataGrid.Resources>
                <DataGrid.Columns>

                    <DataGridTextColumn Header="Наименование категории" Binding="{Binding CategoryTitle}" Width="400"/>
                    <DataGridTextColumn Header="Количество, кг" Binding="{Binding CategoryValue}" />

                </DataGrid.Columns>
                <DataGrid.CellStyle>

                    <Style TargetType="{x:Type DataGridCell}">
                        <Setter Property="BorderThickness" Value="0"/>
                    </Style>
                </DataGrid.CellStyle>

            </DataGrid>

            <Border Background="#1f1d1d" CornerRadius="20" Grid.Column="2" Margin="109,122,37,28">
                <StackPanel Orientation="Horizontal"   Style="{StaticResource StackPanelHoverEffectStyle}">
                    <Image Source="Images/Filter.png"  Height="26" Width="32" Margin="20,0,0,0" />
                    <Button Content="Фильтрация" x:Name="btnFiltrationInOutputInvoice" Click="btnFiltrationInOutputInvoice_Click" FontSize="20" Style="{StaticResource NoHighlightButtonStyle}" Width="211" Margin="-50,0,20,0" Foreground="White"/>
                </StackPanel>
            </Border>
            <ListView  x:Name="lvForSelectDepoItem" FontSize="20" Grid.ColumnSpan="2" Grid.Row="1" Margin="10,47,450,0"  Style="{StaticResource RoundListViewStyle}" SelectionMode="Single" SelectionChanged="lvForSelectDepoItem_SelectionChanged" >
                <ListView.View>
                    <GridView>
                        <GridViewColumn Header="Поставщик:" DisplayMemberBinding="{Binding Supplier.Title}" Width="430"  HeaderContainerStyle="{StaticResource BoldHeaderStyle}"/>
                        <GridViewColumn Header="Продукция:" DisplayMemberBinding="{Binding ProductTitle.Title}" Width="300"  HeaderContainerStyle="{StaticResource BoldHeaderStyle}"/>

                    </GridView>
                </ListView.View>
            </ListView>


            <TextBlock Text=" Номер накладной:" Foreground="Black"  FontSize="25" FontWeight="Bold" Margin="370,44,0,194" Grid.Row="2" Grid.Column="1" />
            <TextBox x:Name="tbOutputInvoiceNum" Foreground="Black" Height="32" FontSize="20" Margin="49,46,14,200" Template="{DynamicResource RoundedTextBoxStyle}" Grid.Row="2" SpellCheck.IsEnabled="True" Language="ru-ru" Grid.Column="2"/>

            <TextBlock Text=" Номер ТС:" Foreground="Black"  FontSize="25" FontWeight="Bold" Margin="378,112,89,132" Grid.Row="2" Grid.Column="1" />
            <TextBox x:Name="tbOutputVehicleNumber" Foreground="Black" Height="32" FontSize="20" Margin="49,107,14,139" Template="{DynamicResource RoundedTextBoxStyle}" Grid.Row="2" SpellCheck.IsEnabled="True" Language="ru-ru" Grid.Column="2"/>



            <TextBlock Text=" Количество отгружаемой продукции, кг:" Foreground="Black"  FontSize="25" FontWeight="Bold" Margin="10,112,61,132" Grid.Row="2" />
            <TextBox x:Name="tbOutputInvoiceQuantity" Foreground="Black" Height="32" FontSize="20" Margin="553,114,365,132" Template="{DynamicResource RoundedTextBoxStyle}" Grid.Row="2" Grid.ColumnSpan="2" SpellCheck.IsEnabled="True" Language="ru-ru"/>


            <TextBlock Text=" Категория отгружаемой продукции:" Foreground="Black"  FontSize="25" FontWeight="Bold" Margin="10,37,96,191" Grid.Row="2" />
            <ComboBox x:Name="cbForChooseTypeOfDepoItem" Foreground="Black"  Height="32" FontSize="20" Margin="553,46,365,200"   Grid.Row="2" Grid.ColumnSpan="2"  Style="{DynamicResource ComboBoxStyle1}">
                <ComboBoxItem Content="Кондиционная продукция"/>
                <ComboBoxItem Content="Отход"/>
            </ComboBox>

            <Border Background="#1f1d1d" CornerRadius="20 " Grid.Column="2"  Grid.Row="2" Margin="78,176,54,58" >
                <StackPanel Orientation="Horizontal"   Style="{StaticResource StackPanelHoverEffectStyle}">
                    <Image Source="Images/AddNewDifItem.png"  Height="30" Width="54" Margin="20,0,0,0" />
                    <Button Content="Создать" x:Name="btnForCreateOutputInvoice" Click="btnForCreateOutputInvoice_Click" FontSize="20" Style="{StaticResource NoHighlightButtonStyle}" Width="99" Margin="10,0,20,0" Foreground="White"/>
                </StackPanel>
            </Border>
        </Grid>

        <!--Grid для создания Нового пользователя-->
        <Grid x:Name="GridForCreateNewUser" Grid.Column="1"  Grid.Row="1" Visibility="Collapsed" Margin="0,32,0,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="169*"/>
                <ColumnDefinition Width="413*"/>
                <ColumnDefinition Width="413*"/>
                <ColumnDefinition Width="413*"/>
                <ColumnDefinition Width="188*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="97*"/>
                <RowDefinition Height="93*"/>
                <RowDefinition Height="108*"/>
                <RowDefinition Height="168*"/>
            </Grid.RowDefinitions>

            <StackPanel Margin="85,-12,56,167" Grid.Column="4">
                <Button Name="QuestionInNewUser" Width="41" HorizontalAlignment="Left"  Style="{StaticResource NoHighlightButtonStyle}" Height="34" Click="QuestionInNewUser_Click">
                    <Image Source="Images/Question.png"></Image>
                    <Button.ToolTip>
                        <ToolTip  Style="{StaticResource ToolTipStyle}" Placement="RelativePoint" HorizontalOffset="30" VerticalOffset="40" Foreground="Black" Content="Нажми на меня!" FontSize="18"></ToolTip>
                    </Button.ToolTip>
                </Button>

                <Popup x:Name="PopupInNewUser" StaysOpen="False" PlacementTarget="{Binding ElementName=QuestionInNewUser}" Placement="Left" PlacementRectangle="0,30,0,0" >
                    <Border Background="White" BorderThickness="1" BorderBrush="Transparent" Padding="10" CornerRadius="0">
                        <TextBlock FontSize="18" TextWrapping="Wrap"> 
                        <Run FontWeight="Bold">Регистрация нового сотрудника:</Run>
                        <LineBreak/>
                        <Run>• Все поля обязательны к заполнению.</Run>
                        <LineBreak/>     
                        <Run>• Цифровые символы могут содержать только поля ввода Номер телефона и Email.</Run>
                        <LineBreak/>
                        <Run>• Поле ввода Email должно содержать символ @.</Run>
                        <LineBreak/>           
                        <Run>• Поле ввода Номер телефона должно содержать 9 цифровых символов, не считая кода страны.</Run>
                        <LineBreak/>
                        <Run>• Пароль сформируется после нажатия на кнопку Сгенерировать пароль и зависит от поля Отдел.</Run>

                        </TextBlock>
                    </Border>
                </Popup>

            </StackPanel>

            <TextBlock Text="Регистрация нового сотрудника" FontWeight="Bold" FontSize="36" Margin="320,-12,302,147" Grid.ColumnSpan="3" Grid.Column="1"/>

            <StackPanel Grid.Row="0" Margin="163,0,398,0" Grid.ColumnSpan="3" >
                <TextBlock Text="Имя:" Foreground="Black"  FontSize="25" FontWeight="Bold" Margin="10,70,0,30" Width="70" />
                <TextBox x:Name="tbUserInfoFirstName" Foreground="Black"  Height="32" FontSize="20" Width="280" Margin="10,0,0,0"  Template="{DynamicResource RoundedTextBoxStyle}" SpellCheck.IsEnabled="True" Language="ru-ru"/>
            </StackPanel>

            <StackPanel Grid.Row="1" Margin="163,0,398,0" Grid.ColumnSpan="3" >
                <TextBlock Text="Email:" Foreground="Black"  FontSize="25" FontWeight="Bold" Margin="10,70,0,30" Width="78" />
                <TextBox x:Name="tbUserInfoEmail" Foreground="Black"  Height="32" FontSize="20" Width="280" Margin="10,0,0,0"  Template="{DynamicResource RoundedTextBoxStyle}"/>
            </StackPanel>

            <StackPanel Grid.Row="2" Margin="163,0,398,0" Grid.ColumnSpan="3" >
                <TextBlock Text="Город:" Foreground="Black" FontSize="25" FontWeight="Bold" Margin="10,70,0,30" Width="86" />
                <TextBox x:Name="tbUserInfoCity" Foreground="Black"  Height="32" FontSize="20" Width="280" Margin="10,0,0,0"  Template="{DynamicResource RoundedTextBoxStyle}" SpellCheck.IsEnabled="True" Language="ru-ru"/>
            </StackPanel>


            <StackPanel Grid.Column="2" Grid.Row="0" >
                <TextBlock Text="Фамилия:" Foreground="Black"  FontSize="25" FontWeight="Bold" Margin="10,70,0,30" Width="126" />
                <TextBox x:Name="tbUserInfoLastName" Foreground="Black"  Height="32" FontSize="20" Width="280" Margin="10,0,0,0"  Template="{DynamicResource RoundedTextBoxStyle}"/>
            </StackPanel>


            <StackPanel Grid.Column="2" Grid.Row="1" >
                <TextBlock Text="Номер телефона:" Foreground="Black" FontSize="25" FontWeight="Bold" Margin="10,70,0,30" Width="220" />
                <TextBox x:Name="tbUserInfoPhoneNumber" TextChanged="tbUserInfoPhoneNumber_TextChanged" Text="+380" Foreground="Black" Height="32" FontSize="20" Width="280" Margin="10,0,0,0"  Template="{DynamicResource RoundedTextBoxStyle}" SpellCheck.IsEnabled="True" Language="ru-ru"/>
            </StackPanel>

            <StackPanel Grid.Column="2" Grid.Row="2" >
                <TextBlock Text="Страна:" Foreground="Black"  FontSize="25" FontWeight="Bold" Margin="10,70,0,30" Width="104" />
                <TextBox x:Name="tbUserInfoCountry" Foreground="Black" Height="32" FontSize="20" Width="280" Margin="10,0,0,0"  Template="{DynamicResource RoundedTextBoxStyle}" SpellCheck.IsEnabled="True" Language="ru-ru"/>
            </StackPanel>


            <StackPanel Grid.Column="2" Grid.Row="0" Margin="398,0,181,0" Grid.ColumnSpan="3" >
                <TextBlock Text="Дата рождения:" Foreground="Black" FontSize="25" FontWeight="Bold" Margin="10,70,0,30" Width="216" />
                <Border Background="#1f1d1d" CornerRadius="15" Width="238" Height="36">
                    <StackPanel Orientation="Horizontal" Style="{StaticResource StackPanelHoverEffectStyle}">
                        <Image Source="Images/Calendar.png"  Height="22" Width="50" Margin="30,0,20,0" />
                        <Button x:Name="btnShowCalendarNewUser" Content="Выбрать дату" Click="btnShowCalendarNewUser_Click"   FontSize="20"  Margin="-80,0,20,0"  Style="{StaticResource NoHighlightButtonStyle}" Foreground="White" Width="238"  />
                    </StackPanel>
                </Border>

            </StackPanel>


            <StackPanel  Grid.Column="2" Grid.Row="1" Margin="398,0,181,0" Grid.ColumnSpan="3">
                <TextBlock Text="Пол:" Foreground="Black"  FontSize="25" FontWeight="Bold" Margin="10,70,0,30" Width="86" />
                <ComboBox  x:Name="cmbUserInfoGender" Foreground="Black" Background="White" Height="32" FontSize="20" Width="280" Margin="10,0,0,0" Style="{DynamicResource ComboBoxStyle1}">
                    <ComboBoxItem>
                        <TextBlock Text="Мужской"/>
                    </ComboBoxItem>
                    <ComboBoxItem>
                        <TextBlock Text="Женский"/>
                    </ComboBoxItem>
                </ComboBox>
            </StackPanel>


            <StackPanel  Grid.Column="2" Grid.Row="2" Margin="398,0,181,0" Grid.ColumnSpan="3">
                <TextBlock Text="Отдел:" Foreground="Black"  FontSize="25" FontWeight="Bold" Margin="10,70,0,30" Width="92" />
                <ComboBox  x:Name="cmbWithRoles" Foreground="Black" Background="White"  Height="32" FontSize="20" Width="280" Margin="10,0,0,0" Style="{DynamicResource ComboBoxStyle1}">
                    <ComboBoxItem>
                        <TextBlock Text="Лаборатория"/>
                    </ComboBoxItem>
                    <ComboBoxItem>
                        <TextBlock Text="Отдел кадров"/>
                    </ComboBoxItem>
                    <ComboBoxItem>
                        <TextBlock Text="Производственный отдел"/>
                    </ComboBoxItem>
                    <ComboBoxItem>
                        <TextBlock Text="Бухгалтерия"/>
                    </ComboBoxItem>
                </ComboBox>

            </StackPanel>



            <StackPanel Grid.Row="3" Margin="163,0,5,0" Grid.ColumnSpan="2" >
                <TextBlock Text="Пароль:" Foreground="Black"  FontSize="25" FontWeight="Bold" Margin="10,50,0,30" Width="104" />
                <TextBox   x:Name="tbForSavePass" Foreground="Black"  Height="32" FontSize="20" Width="280" Margin="10,0,0,0"  IsReadOnly="True" Template="{DynamicResource RoundedTextBoxStyle}"/>
            </StackPanel>
            <TextBlock x:Name="tbCopiedNotification" Text="Текст скопирован" Visibility="Collapsed" Margin="295,76,0,226" Foreground="Black"  FontSize="17" Grid.Row="3" Grid.Column="1" HorizontalAlignment="Left" Width="148" Grid.ColumnSpan="2"/>

            <Button x:Name="btcCopy" Click="btcCopy_Click"  Style="{DynamicResource RoundedButtonStyle2}" Margin="350,113,10,177"  FontSize="15"  Background="White" Foreground="Black" FontWeight="DemiBold" Grid.Row="3" Grid.Column="1" >
                <Image Source="Images\Copy.png" Height="30" Width="39"/>
            </Button>


            <StackPanel  Grid.Column="2" Grid.Row="3"   Margin="53,113,53,109">
                <Border Background="#1f1d1d" CornerRadius="20" Height="42" Width="291">
                    <StackPanel Orientation="Horizontal"   Style="{StaticResource StackPanelHoverEffectStyle}">
                        <Image Source="Images/UserPasswordForGenerate.png"  Height="22" Width="50" Margin="10,0,40,0" />
                        <Button x:Name="btnGenaratePassByRole" Content="Сгенерировать пароль" FontSize="20" Style="{StaticResource NoHighlightButtonStyle}" Width="227" Margin="-52,0,20,0" Foreground="White"  Click="btnGenaratePassByRole_Click"/>
                    </StackPanel>
                </Border>
            </StackPanel>

            <StackPanel  Grid.Column="2" Grid.Row="3"    Margin="398,113,181,110" Grid.ColumnSpan="3" >
                <Border Background="#1f1d1d" CornerRadius="20" Height="42" Width="204">
                    <StackPanel Orientation="Horizontal"   Style="{StaticResource StackPanelHoverEffectStyle}">
                        <Image Source="Images/AddNewDifItem.png"  Height="30" Width="54" Margin="20,0,0,0" />
                        <Button Content="Добавить" x:Name="btnForCreateNewUser" Click="btnForCreateNewUser_Click" FontSize="20" Style="{StaticResource NoHighlightButtonStyle}" Width="99" Margin="10,0,20,0" Foreground="White"/>
                    </StackPanel>
                </Border>
            </StackPanel>

            <Calendar Style="{DynamicResource CalendarStyle1}" CalendarButtonStyle="{DynamicResource CalendarButtonStyle1}" CalendarDayButtonStyle="{DynamicResource CalendarDayButtonStyle1}" CalendarItemStyle="{DynamicResource CalendarItemStyle1}"   x:Name="calendarNewUser" Visibility="Collapsed" SelectedDatesChanged="calendarNewUser_SelectedDatesChanged"  Margin="13,152,10,135" Grid.Column="3" Grid.RowSpan="3" />

        </Grid>



        <!--Grid для создания Акта доработки у Бухгалтерии-->
        <Grid x:Name="GridForCompletionReportAcc" Grid.Column="1"  Grid.Row="1" Visibility="Collapsed">
            <Grid.RowDefinitions>
                <RowDefinition Height="187*"/>
                <RowDefinition Height="225*"/>
                <RowDefinition Height="54*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="295*"/>
                <ColumnDefinition Width="308*"/>
                <ColumnDefinition Width="167*"/>
            </Grid.ColumnDefinitions>

            <StackPanel Margin="253,26,41,316" Grid.Column="2">
                <Button Name="QuestionInCompletionReportAcc" Width="41" HorizontalAlignment="Left"  Style="{StaticResource NoHighlightButtonStyle}" Height="34" Click="QuestionInCompletionReportAcc_Click">
                    <Image Source="Images/Question.png"></Image>
                    <Button.ToolTip>
                        <ToolTip  Style="{StaticResource ToolTipStyle}" Placement="RelativePoint" HorizontalOffset="30" VerticalOffset="40" Foreground="Black" Content="Нажми на меня!" FontSize="18"></ToolTip>
                    </Button.ToolTip>
                </Button>

                <Popup x:Name="PopupInCompletionReportAcc" StaysOpen="False" PlacementTarget="{Binding ElementName=QuestionInCompletionReportAcc}" Placement="Left" PlacementRectangle="0,30,0,0" >
                    <Border Background="White" BorderThickness="1" BorderBrush="Transparent" Padding="10" CornerRadius="0">
                        <TextBlock FontSize="18" TextWrapping="Wrap">
                    <Run FontWeight="Bold">Финансовый расчет Акта доработки:</Run>
                    <LineBreak/>
                    <Run>• Выберите Акт доработки.</Run>
                    <LineBreak/>
                    <Run>• Выберите Прайс-лист с соответствующим Наименованием продукции.</Run>
                    <LineBreak/>
                    <Run>• Сохраните Акт-доработки.</Run>
                    <LineBreak/>
                    <Run>• Все поля обязательны к заполнению.</Run>
                        </TextBlock>
                    </Border>
                </Popup>

            </StackPanel>

            <TextBlock Text="Финансовый расчет Акта доработки" FontWeight="Bold" FontSize="36" Margin="480,11,78,300" Grid.ColumnSpan="2"/>

            <TextBlock Text="Выберите Акт доработки:" FontSize="28" Margin="42,80,162,249" FontWeight="Bold"/>
            <ListView x:Name="lvForSelectCompletionReport" FontSize="20" Grid.ColumnSpan="3" SelectionChanged="lvForSelectCompletionReport_SelectionChanged" Grid.Row="0" Margin="42,130,41,360" Style="{StaticResource RoundListViewStyle}" SelectionMode="Single" Grid.RowSpan="2">
                <ListView.View>
                    <GridView>
                        <GridViewColumn Header="№ Акта доработки:" DisplayMemberBinding="{Binding ReportNumber}" Width="200" HeaderContainerStyle="{StaticResource BoldHeaderStyle}"/>
                        <GridViewColumn Header="Дата создания:" DisplayMemberBinding="{Binding ReportDate, StringFormat='{}{0:dd.MM.yyyy}'}" Width="180" HeaderContainerStyle="{StaticResource BoldHeaderStyle}"/>
                        <GridViewColumn Header="Поставщик:" DisplayMemberBinding="{Binding Supplier.Title}" Width="200"  HeaderContainerStyle="{StaticResource BoldHeaderStyle}"/>
                        <GridViewColumn Header="Продукция:" DisplayMemberBinding="{Binding ProductTitle.Title}" Width="200"  HeaderContainerStyle="{StaticResource BoldHeaderStyle}"/>
                        <GridViewColumn Header="Количество сушки, т * %:" DisplayMemberBinding="{Binding QuantityesDrying}" Width="260" HeaderContainerStyle="{StaticResource BoldHeaderStyle}"/>
                        <GridViewColumn Header="Физический вес, т:" DisplayMemberBinding="{Binding PhysicalWeightReport,  StringFormat={}{0:F2}}" Width="240" HeaderContainerStyle="{StaticResource BoldHeaderStyle}"/>
                        <GridViewColumn Header="Финансовый расчет:" DisplayMemberBinding="{Binding IsFinalized}" Width="250" HeaderContainerStyle="{StaticResource BoldHeaderStyle}"/>
                    </GridView>
                </ListView.View>
            </ListView>

            <TextBlock Text="Полная информация Акта:" FontSize="28" Grid.Row="1" Margin="42,105,136,296" FontWeight="Bold"/>
            <DataGrid x:Name="dgForAdditionalInfoInCompletionReport" AutoGenerateColumns="False" FontSize="20" Margin="42,154,106,86" FontWeight="Bold"  HeadersVisibility="Column" IsReadOnly="True"  VirtualizingStackPanel.IsVirtualizing="True" Grid.ColumnSpan="2" Grid.Row="1" Grid.RowSpan="2">
                <DataGrid.Resources>
                    <Style TargetType="{x:Type DataGridColumnHeader}">
                        <Setter Property="Background" Value="#DCDCDC"/>
                        <Setter Property="Foreground" Value="Black"/>
                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                        <Setter Property="Padding" Value="5"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                        <Setter Property="VirtualizingStackPanel.IsVirtualizing" Value="True"/>
                        <Setter Property="Margin" Value="0 0 3 0"/>
                    </Style>
                    <Style TargetType="{x:Type DataGridCell}">
                        <Setter Property="Background" Value="Gray"  />
                        <Setter Property="Foreground" Value="Black"/>
                        <Setter Property="BorderBrush" Value="Black"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                        <Setter Property="Margin" Value="0 0 3 0"/>
                    </Style>
                    <Style TargetType="{x:Type DataGrid}">
                        <Setter Property="BorderBrush" Value="Black"/>
                        <Setter Property="BorderThickness" Value="2"/>
                        <Setter Property="Margin" Value="0 0 3 0"/>
                    </Style>
                    <Style x:Key="CustomSelectionStyle" TargetType="{x:Type DataGridCell}">
                        <Setter Property="BorderBrush" Value="Gray"/>
                        <Setter Property="Margin" Value="0 0 3 0"/>
                    </Style>
                </DataGrid.Resources>
                <DataGrid.Columns>

                    <DataGridTextColumn Header="Технологическая операция:" Binding="{Binding Title}" />
                    <DataGridTextColumn Header="Количество продукции, т:" Binding="{Binding Amount, StringFormat={}{0:F3}}" />
                    <DataGridTextColumn Header="Цена операции, грн/т:" Binding="{Binding Price}" Width="250"/>
                    <DataGridTextColumn Header="Общая стоимость, грн:" Binding="{Binding TotalCost}" />

                </DataGrid.Columns>
                <DataGrid.CellStyle>

                    <Style TargetType="{x:Type DataGridCell}">
                        <Setter Property="BorderThickness" Value="0"/>
                    </Style>
                </DataGrid.CellStyle>

            </DataGrid>

            <TextBlock Text="Выберите Прайс-лист:" FontSize="30" Grid.Row="1" Margin="554,97,63,299" FontWeight="Bold" Grid.Column="1" Grid.ColumnSpan="2"/>
            <ListView  x:Name="lvForSelectPriceList" FontSize="20" Grid.Row="1" Margin="554,154,41,86" Style="{StaticResource RoundListViewStyle}" SelectionMode="Single" Grid.Column="1" Grid.ColumnSpan="2" Grid.RowSpan="2">
                <ListView.View>
                    <GridView>
                        <GridViewColumn Header="Наименование продукции:" DisplayMemberBinding="{Binding ProductTitle}" Width="300" HeaderContainerStyle="{StaticResource BoldHeaderStyle}"/>
                    </GridView>
                </ListView.View>
            </ListView>

            <Border Background="#1f1d1d" CornerRadius="20 " Grid.Column="2"  Grid.Row="2" Margin="91,37,41,25">
                <StackPanel Orientation="Horizontal"   Style="{StaticResource StackPanelHoverEffectStyle}">
                    <Image Source="Images/Save.png"  Height="30" Width="42" Margin="20,0,0,0" />
                    <Button Content="Сохранить" x:Name="btnForCompletionReportAcc" Click="btnForCompletionReportAcc_Click" FontSize="20" Style="{StaticResource NoHighlightButtonStyle}" Width="112" Margin="10,0,20,0" Foreground="White"/>
                </StackPanel>
            </Border>
        </Grid>

        <!--Grid для просмотра данных-->
        <Grid x:Name="GridForViewData" Grid.Column="1" Grid.Row="1" Visibility="Collapsed">


            <TextBlock Text="Тип документа:" FontSize="25" FontWeight="Bold"  Margin="1220,137,120,753"/>


            <ComboBox x:Name="cbForChooseData" Style="{DynamicResource ComboBoxStyle1}" SelectionChanged="cbForChooseData_SelectionChanged"  Width="292" Foreground="Black" HorizontalAlignment="Left"  Margin="1174,184,0,707" FontSize="24"/>

            <StackPanel Margin="1460,10,43,890">
                <Button Name="QuestionInViewData" Width="41" HorizontalAlignment="Left"  Style="{StaticResource NoHighlightButtonStyle}" Height="34" Click="QuestionInViewData_Click">
                    <Image Source="Images/Question.png"></Image>
                    <Button.ToolTip>
                        <ToolTip  Style="{StaticResource ToolTipStyle}" Placement="RelativePoint" HorizontalOffset="30" VerticalOffset="40" Foreground="Black" Content="Нажми на меня!" FontSize="18"></ToolTip>
                    </Button.ToolTip>
                </Button>

                <Popup x:Name="PopupInViewData" StaysOpen="False" PlacementTarget="{Binding ElementName=QuestionInViewData}" Placement="Left" PlacementRectangle="0,30,0,0" >
                    <Border Background="White" BorderThickness="1" BorderBrush="Transparent" Padding="10" CornerRadius="0">
                        <TextBlock FontSize="18" TextWrapping="Wrap">
                        <Run FontWeight="Bold">Просмотр данных:</Run>
                        <LineBreak/>
                        <Run>• Выберите тип документа.</Run>
                        <LineBreak/>
                        <Run>• Используйте фильтрацию для сортировки списка документов выбранного типа.</Run>
                        <LineBreak/>
                        <Run>• Для внесения правок в документ используйте режим редактирования.</Run>
                        </TextBlock>
                    </Border>
                </Popup>

            </StackPanel>


            <Border Margin="45,27,453,856"  Background="Black" CornerRadius="15">
                <StackPanel Orientation="Horizontal">
                    <TextBlock x:Name ="txForFirstArgument" Text="Аргумент 1:" Margin="70,5,40,0"  Width="229" Foreground="White" FontSize="30" />
                    <TextBlock x:Name="txForSecondArgument" Text="Аргумент 2:" Margin="80,5,40,0"  Width="240" Foreground="White" FontSize="30"/>
                    <TextBlock x:Name ="txForThirdArgument" Text="Аргумент 3:" Margin="70,5,40,0"  Width="226" Foreground="White" FontSize="30"/>
                </StackPanel>
            </Border>

            <Border Margin="45,96,453,777" Background="Black" CornerRadius="15">
                <StackPanel Orientation="Horizontal">
                    <TextBox x:Name ="tbForFirstArgument" Width="200"  Template="{DynamicResource RoundedTextBoxStyle}" Height="34" Margin="50,5,100,0" FontSize="20"/>
                    <TextBox x:Name="tbForSecondArgument" Width="200"  Template="{DynamicResource RoundedTextBoxStyle}" Height="34" Margin="50,5,130,0"  FontSize="20"/>
                    <Border Background="#1f1d1d" CornerRadius="15" Width="231" Height="38">
                        <StackPanel Orientation="Horizontal" Style="{StaticResource StackPanelHoverEffectStyle}">
                            <Image Source="Images/Calendar.png"  Height="22" Width="50" Margin="30,0,20,0" />
                            <Button x:Name="btnShowCalendarViewData" Content="Выбрать дату" Click="btnShowCalendarViewData_Click"   FontSize="20"  Margin="-80,0,20,0"  Style="{StaticResource NoHighlightButtonStyle}" Foreground="White" Width="238"  />
                        </StackPanel>
                    </Border>

                </StackPanel>
            </Border>


            <StackPanel  Margin="815,187,531,703">
                <Border Background="#1f1d1d" CornerRadius="20" Height="40" Width="176">
                    <StackPanel Orientation="Horizontal" Margin="0,0,-16,0" Style="{StaticResource StackPanelHoverEffectStyle}">
                        <Image Source="Images/Search.png"  Height="25" Width="50" Margin="10,0,0,0" />
                        <Button x:Name="btnToSearchInGrid" Content="Поиск..." FontSize="20" Style="{StaticResource NoHighlightButtonStyle}" Width="172" Margin="-52,0,20,0" Foreground="White"  Click="btnToSearchInGrid_Click"/>
                    </StackPanel>
                </Border>
            </StackPanel>

            <Border Background="#1f1d1d" CornerRadius="10" Margin="1035,187,453,704">
                <StackPanel Orientation="Horizontal" Style="{StaticResource StackPanelHoverEffectStyle}">
                    <Button x:Name="btnClearFiltrationInViewDate" Click="btnClearFiltrationInViewDate_Click"  FontSize="20" Style="{StaticResource NoHighlightButtonStyle}" Width="55" Foreground="White">
                        <Image Source="Images/Reset.png" Height="30" Width="30" />
                        <Button.ToolTip>
                            <ToolTip  Style="{StaticResource ToolTipStyle}" Placement="RelativePoint" HorizontalOffset="30" VerticalOffset="40" Foreground="Black" Content="Сброс фильтрации" FontSize="18"></ToolTip>
                        </Button.ToolTip>
                    </Button>
                </StackPanel>
            </Border>


            <Border  Margin="45,185,1081,701"  Background="Black" CornerRadius="15">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Режим редактирования:" Foreground="White" FontSize="20"  FontWeight="Bold" Margin="10,0,10,0" Height="34" Width="272"/>
                    <CheckBox x:Name="cbReadOnlyForGrid" Checked="cbReadOnlyForGrid_Checked"  Unchecked="cbReadOnlyForGrid_Unchecked"  Style="{DynamicResource CheckBoxStyleEditMode}" Width="191" Height="32" Background="Black"/>
                </StackPanel>
            </Border>

            <StackPanel   Margin="508,187,838,705" Visibility="Collapsed" x:Name="StackForEditInDataGrid">
                <Border Background="#1f1d1d" CornerRadius="20" Height="40" Width="176"  Visibility="Visible">
                    <StackPanel Orientation="Horizontal" Margin="0,0,-16,0" Style="{StaticResource StackPanelHoverEffectStyle}">
                        <Image Source="Images/Save.png"  Height="25" Width="50" Margin="8,0,0,0" />
                        <Button x:Name="btnToSaveInfoFromDataGrid" Content="Сохранить" FontSize="20"  Style="{StaticResource NoHighlightButtonStyle}" Width="144" Margin="-25,0,20,0" Foreground="White"  Click="btnToSaveInfoFromDataGrid_Click"/>
                    </StackPanel>
                </Border>
            </StackPanel>



            <Border Background="Black" CornerRadius="10" Margin="0,268,0,0" Height="624" VerticalAlignment="Top" HorizontalAlignment="Center" Width="1454">
                <DataGrid x:Name="dg" AutoGenerateColumns="False" CanUserAddRows="False" CanUserDeleteRows="False" FontSize="20" FontWeight="Bold" Margin="5" HeadersVisibility="Column" IsReadOnly="True"  VirtualizingStackPanel.IsVirtualizing="True">
                    <DataGrid.Resources>
                        <Style TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="Background" Value="Black"/>
                            <Setter Property="Foreground" Value="White"/>
                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                            <Setter Property="VirtualizingStackPanel.IsVirtualizing" Value="True"/>
                            <Setter Property="Padding" Value="10"/>
                        </Style>
                        <Style TargetType="{x:Type DataGridCell}">
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="Foreground" Value="Black"/>
                            <Setter Property="BorderBrush" Value="Black"/>
                            <Setter Property="BorderThickness" Value="0"/>
                            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                        </Style>
                        <Style TargetType="{x:Type DataGrid}">
                            <Setter Property="BorderBrush" Value="Black"/>
                        </Style>
                        <Style x:Key="CustomSelectionStyle" TargetType="{x:Type DataGridCell}">
                            <Setter Property="BorderBrush" Value="Transparent"/>
                        </Style>
                        <Style TargetType="{x:Type DataGridCell}" x:Key="DataGridCellMouseOverStyle">
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="LightGray"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                        <Style TargetType="DataGridRow" x:Key="DataGridRowMouseOverStyle">
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="LightGray"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DataGrid.Resources>

                    <DataGrid.RowStyle>
                        <Style TargetType="DataGridRow">
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#F0F0F0"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DataGrid.RowStyle>


                    <DataGrid.CellStyle>
                        <Style TargetType="DataGridCell">
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="Foreground" Value="Black"/>
                            <Setter Property="BorderBrush" Value="Black"/>
                            <Setter Property="BorderThickness" Value="0"/>
                            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background" Value="Black"/>
                                    <Setter Property="Foreground" Value="White"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DataGrid.CellStyle>

                </DataGrid>
            </Border>

            <Calendar Style="{DynamicResource CalendarStyle1}" CalendarButtonStyle="{DynamicResource CalendarButtonStyle1}"  CalendarDayButtonStyle="{DynamicResource CalendarDayButtonStyle1}" CalendarItemStyle="{DynamicResource CalendarItemStyle1}"   x:Name="calendarViewData" Visibility="Collapsed" SelectedDatesChanged="calendarViewData_SelectedDatesChanged"  Margin="728,143,453,473" />

        </Grid>

        <!--Grid для просмотра аналитики-->
        <Grid x:Name="GridForBar" Visibility="Collapsed">
            <Border Style="{StaticResource BlackBorderStackPanelContainerStyle}"  Margin="396,183,-97,-279" Visibility="Collapsed" x:Name="BorderForBarButtons">
                <StackPanel>
                    <Border Background="#1f1d1d" CornerRadius="10" Width="50" Margin="0 10 0 10" Height="40" >
                        <StackPanel Orientation="Horizontal" Style="{StaticResource StackPanelHoverEffectStyle}">
                            <Button x:Name="AddNewColumn" Click="AddNewColumn_Click" Style="{StaticResource NoHighlightButtonStyle}" Width="50">
                                <Image Source="Images/AddNewColumn.png" Height="30" Width="30" />
                                <Button.ToolTip>
                                    <ToolTip  Style="{StaticResource ToolTipStyle}" Placement="RelativePoint" HorizontalOffset="30" VerticalOffset="40" Foreground="Black" Content="Добавить новую колонку аналитики" FontSize="18"></ToolTip>
                                </Button.ToolTip>
                            </Button>
                        </StackPanel>
                    </Border>
                    <Border Background="#1f1d1d" CornerRadius="10" Width="50" Margin="0 10 0 10" Height="40">
                        <StackPanel Orientation="Horizontal" Style="{StaticResource StackPanelHoverEffectStyle}">
                            <Button x:Name="btnSortDataAscending" Click="btnSortDataAscending_Click"  Style="{StaticResource NoHighlightButtonStyle}" Width="50">
                                <Image Source="Images/SortingByAscending.png" Height="30" Width="30" />
                                <Button.ToolTip>
                                    <ToolTip  Style="{StaticResource ToolTipStyle}" Placement="RelativePoint" HorizontalOffset="30" VerticalOffset="40" Foreground="Black" Content="Сортировка по возрастанию" FontSize="18"></ToolTip>
                                </Button.ToolTip>
                            </Button>
                        </StackPanel>
                    </Border>
                    <Border Background="#1f1d1d" CornerRadius="10" Width="50" Margin="0 10 0 10" Height="40">
                        <StackPanel Orientation="Horizontal" Style="{StaticResource StackPanelHoverEffectStyle}">
                            <Button x:Name="btnSortDataDescending" Click="btnSortDataDescending_Click"  Style="{StaticResource NoHighlightButtonStyle}" Width="50">
                                <Image Source="Images/SortingByDescending.png" Height="30" Width="30" />
                                <Button.ToolTip>
                                    <ToolTip  Style="{StaticResource ToolTipStyle}" Placement="RelativePoint" HorizontalOffset="30" VerticalOffset="40" Foreground="Black" Content="Сортировка по убыванию" FontSize="18"></ToolTip>
                                </Button.ToolTip>
                            </Button>
                        </StackPanel>
                    </Border>

                    <Border Background="#1f1d1d" CornerRadius="10" Width="50" Margin="0 10 0 10" Height="40">
                        <StackPanel Orientation="Horizontal" Style="{StaticResource StackPanelHoverEffectStyle}">
                            <Button x:Name="ResetAllColumns" Click="ResetAllColumns_Click" Style="{StaticResource NoHighlightButtonStyle}" Width="50">
                                <Image Source="Images/Reset.png" Height="30" Width="30" />
                                <Button.ToolTip>
                                    <ToolTip  Style="{StaticResource ToolTipStyle}" Placement="RelativePoint" HorizontalOffset="30" VerticalOffset="40" Foreground="Black" Content="Удалить все колонки" FontSize="18"></ToolTip>
                                </Button.ToolTip>
                            </Button>
                        </StackPanel>
                    </Border>
                </StackPanel>
            </Border>
            <MyControl:BarChartControl x:Name="barChart" Margin="547,238,-1458,-852" />
        </Grid>


        <!--Шрифты >.<-->
        <!--FontFamily ="MyFonts/NotoSansJP-Medium.ttf #Noto Sans JP Medium"-->

    </Grid>
</Window>
